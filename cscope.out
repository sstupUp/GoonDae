cscope 15 /home/g414/ABC/stuffs               0000212281
	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/BFS.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"löked_li°.h
"

4 
	~"queue.h
"

5 
	~"gøph.h
"

7 
	#TRUE
 1

	)

9 
Whîe_2_begö
(*);

10 
BFS
(
GRAPH
*, 
QUEUE
*, , );

12 
	$maö
()

14 
GRAPH
* 
g
;

15 
QUEUE
* 
q
;

16 
size
, 
°¨t
 = 0;

18 
	`¥ötf
("\nEnterÅotalÇumber of vertices: ");

19 
	`sˇnf
("%d", &
size
);

21 
g
 = 
	`Cª©e_gøph
(
size
);

22 
q
 = 
	`Cª©e_queue
();

24 
	`Make_gøph
(
g
);

26 
	`¥ötf
("\n");

28 
	`Whîe_2_begö
(&
°¨t
);

30 
	`BFS
(
g
, 
q
, 
°¨t
, 
size
);

33 
	}
}

35 
	$Whîe_2_begö
(* 
°¨t
)

37 
	`¥ötf
("\nEnter starting vertexÇumber: ");

38 
	`sˇnf
("%d", 
°¨t
);

40 
	`¥ötf
("\n");

43 
	}
}

45 
	$BFS
(
GRAPH
* 
g
, 
QUEUE
* 
q
, 
s
, 
size
)

47 
u
;

48 
NODE
* 
dummy
;

49 
visôed
[
size
];

51 
	`Enqueue
(
q
, 
s
);

52 
visôed
[
s
] = 
TRUE
;

53 
	`¥ötf
("visôed: %d\n", 
s
);

55 !
	`is_EMPTY
(
q
))

57 
u
 = 
	`Dequeue
(
q
);

58 
dummy
 = 
g
->
adjLi°
[
u
];

60 
dummy
 !
NULL
)

62 if(
visôed
[
dummy
->
vîãx
] !
TRUE
)

64 
	`Enqueue
(
q
, 
dummy
->
vîãx
);

65 
visôed
[
dummy
->
vîãx
] = 
TRUE
;

66 
	`¥ötf
("visôed: %d\n", 
dummy
->
vîãx
);

69 
dummy
 = dummy->
√xt
;

72 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/DFS.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"löked_li°.h
"

4 
	~"queue.h
"

5 
	~"gøph.h
"

7 
	#TRUE
 1

	)

9 
Whîe_2_begö
(*);

10 
DFS
(
GRAPH
*, );

12 
	gvisôed
[5];

14 
	$maö
()

16 
GRAPH
* 
g
;

17 
QUEUE
* 
q
;

18 
size
, 
°¨t
;

20 
	`¥ötf
("\nEnterÅotalÇumber of vertices: ");

21 
	`sˇnf
("%d", &
size
);

23 
g
 = 
	`Cª©e_gøph
(
size
);

24 
q
 = 
	`Cª©e_queue
();

26 
	`Make_gøph
(
g
);

28 
	`¥ötf
("\n");

30 
	`Whîe_2_begö
(&
°¨t
);

32 
	`DFS
(
g
, 
°¨t
);

35 
	}
}

37 
	$Whîe_2_begö
(* 
°¨t
)

39 
	`¥ötf
("\nEnter starting vertexÇumber: ");

40 
	`sˇnf
("%d", 
°¨t
);

42 
	`¥ötf
("\n");

45 
	}
}

46 
	$DFS
(
GRAPH
* 
g
, 
s
)

48 
u
;

49 
NODE
* 
dummy
;

51 
	`¥ötf
("visôed: %d\n", 
s
);

53 
dummy
 = 
g
->
adjLi°
[
s
];

54 
visôed
[
s
] = 1;

56 
dummy
 !
NULL
)

58 
s
 = 
dummy
->
vîãx
;

59 if(!
visôed
[
s
])

60 
	`DFS
(
g
,
s
);

62 
dummy
 = dummy->
√xt
;

66 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/Path_find.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"löked_li°.h
"

4 
	~"queue.h
"

5 
	~"gøph.h
"

7 
	#TRUE
 1

	)

9 
Whîe_2_begö
(*);

10 
BFS
(
GRAPH
*, 
QUEUE
*, , , );

12 
	$maö
()

14 
GRAPH
* 
g
;

15 
QUEUE
* 
q
;

16 
size
, 
°¨t
 = 0, 
de°
;

18 
	`¥ötf
("\nEnterÅotalÇumber of vertices: ");

19 
	`sˇnf
("%d", &
size
);

21 
g
 = 
	`Cª©e_gøph
(
size
);

22 
q
 = 
	`Cª©e_queue
();

24 
	`Make_gøph
(
g
);

26 
	`¥ötf
("\n");

28 
	`Whîe_2_begö
(&
°¨t
);

29 
	`Whîe_2_begö
(&
de°
);

31 
	`BFS
(
g
, 
q
, 
°¨t
, 
de°
, 
size
);

34 
	}
}

36 
	$Whîe_2_begö
(* 
°¨t
)

38 
	`¥ötf
("\nEnter starting vertexÇumber: ");

39 
	`sˇnf
("%d", 
°¨t
);

41 
	`¥ötf
("\n");

44 
	}
}

46 
	$BFS
(
GRAPH
* 
g
, 
QUEUE
* 
q
, 
s
, 
d
, 
size
)

48 
u
;

49 
NODE
* 
dummy
, *
∑ª¡
;

50 
visôed
[
size
], 
Êag
 = 0;

52 
	`¥ötf
("Sh‹ã°Ö©h from %dÅÿ%d\n", 
s
, 
d
);

54 
	`Enqueue
(
q
, 
s
);

55 
visôed
[
s
] = 
TRUE
;

56 
	`¥ötf
("%d ", 
s
);

58 !
	`is_EMPTY
(
q
))

60 
u
 = 
	`Dequeue
(
q
);

61 
dummy
 = 
g
->
adjLi°
[
u
];

62 
∑ª¡
 = 
dummy
;

63 
∑ª¡
->∑ª¡ = 
NULL
;

65 
dummy
 !
NULL
)

67 if(
dummy
->
vîãx
 =
d
)

69 
Êag
 = 1;

73 if(
visôed
[
dummy
->
vîãx
] !
TRUE
)

75 
	`Enqueue
(
q
, 
dummy
->
vîãx
);

76 
visôed
[
dummy
->
vîãx
] = 
TRUE
;

80 
dummy
 = dummy->
√xt
;

81 
dummy
->
∑ª¡
 =Öarent;

84 if(
Êag
 == 1)

86 
∑ª¡
 !
NULL
)

88 
	`¥ötf
("%d ", 
∑ª¡
->
vîãx
);

89 
∑ª¡
 =Öarent->parent;

94 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/graph.h

1 
	sgøph


3 
	mnVîãx
;

4 
NODE
** 
	madjLi°
;

6 }
	tGRAPH
;

8 
GRAPH
* 
Cª©e_gøph
();

9 
Inô_gøph
(
GRAPH
*);

10 
Add_edge
(
GRAPH
*, ,);

11 
Make_gøph
(
GRAPH
*);

12 
Pröt_gøph
(
GRAPH
*);

14 
GRAPH
* 
	$Cª©e_gøph
(
size
)

16 
GRAPH
* 
g
 = (GRAPH*)
	`mÆloc
((GRAPH));

18 
g
->
nVîãx
 = 
size
;

19 
g
->
adjLi°
 = (
NODE
**)
	`mÆloc
((NODE*)*
size
);

21 
	`Inô_gøph
(
g
);

23  
g
;

24 
	}
}

26 
	$Inô_gøph
(
GRAPH
* 
g
)

28 
i
 = 0;

30 ; 
i
 < 
g
->
nVîãx
; ++i)

31 
g
->
adjLi°
[
i
] = 
NULL
;

32 
	}
}

34 
	$Add_edge
(
GRAPH
* 
g
, 
°¨t
, 
íd
)

36 
i
 = 0;

37 
NODE
* 
dummy
;

41 
dummy
 = 
	`Cª©e_node
(
íd
);

42 
dummy
->
√xt
 = 
g
->
adjLi°
[
°¨t
];

43 
g
->
adjLi°
[
°¨t
] = 
dummy
;

45 
	}
}

47 
	$Make_gøph
(
GRAPH
* 
g
)

49 
°¨t
 = 0, 
íd
 = 0;

51 
	`¥ötf
("\nEnter '-1'ÅoÉnd making graph");

55 
	`¥ötf
("\nEnter vertex: ");

56 
	`sˇnf
("%d", &
°¨t
);

58 if(
°¨t
 == -1)

63 
	`¥ötf
("Enterádjacent vertex: ");

64 
	`sˇnf
("%d", &
íd
);

66 if(
íd
 == -1)

69 
	`Add_edge
(
g
, 
°¨t
, 
íd
);

74 
	}
}

76 
	$Pröt_gøph
(
GRAPH
* 
g
)

78 
i
 = 0;

79 
NODE
* 
dummy
;

81 ; 
i
 < 
g
->
nVîãx
; ++i)

83 
	`¥ötf
("vîãx %d i†adja˚¡ wôh: ", 
i
);

85 
dummy
 = 
g
->
adjLi°
[
i
];

86 
dummy
 !
NULL
)

88 
	`¥ötf
("%d ", 
dummy
->
vîãx
);

89 
dummy
 = dummy->
√xt
;

92 
	`¥ötf
("\n");

94 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/linked_list.h

1 
	#WHITE
 0

	)

2 
	#GRAY
 1

	)

3 
	#BLACK
 2

	)

5 
	snode


7 
	mvîãx
;

8 
node
* 
	m√xt
;

9 
node
* 
	m∑ª¡
;

11 }
	tNODE
;

13 
NODE
* 
Cª©e_node
();

14 
Inô_node
(
NODE
*, );

16 
NODE
* 
	$Cª©e_node
(
vîãx
)

18 
NODE
* 
dummy
 = (NODE*)
	`mÆloc
((NODE));

19 
	`Inô_node
(
dummy
, 
vîãx
);

21  
dummy
;

22 
	}
}

24 
	$Inô_node
(
NODE
* 
n
, 
vîãx
)

26 
n
->
vîãx
 = vertex;

27 
n
->
√xt
 = 
NULL
;

28 
n
->
∑ª¡
 = 
NULL
;

29 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/queue.h

1 
	#MAX_QUEUE_SIZE
 20

	)

3 
	squeue


5 
	mQueue
[
MAX_QUEUE_SIZE
];

6 
	m‰⁄t
;

7 
	mª¨
;

9 }
	tQUEUE
;

11 
QUEUE
* 
Cª©e_queue
();

12 
Inô_queue
(
QUEUE
*);

13 
is_FULL
(
QUEUE
*);

14 
is_EMPTY
(
QUEUE
*);

15 
Enqueue
(
QUEUE
*, );

16 
Dequeue
(
QUEUE
*);

18 
QUEUE
* 
	$Cª©e_queue
()

20 
QUEUE
* 
dummy
 = (QUEUE*)
	`mÆloc
((QUEUE));

22 
	`Inô_queue
(
dummy
);

24  
dummy
;

25 
	}
}

27 
	$Inô_queue
(
QUEUE
* 
q
)

29 
i
 = 0;

31 ;
i
<
MAX_QUEUE_SIZE
; ++i)

32 
q
->
Queue
[
i
] = 0;

34 
q
->
‰⁄t
 = q->
ª¨
 = 0;

35 
	}
}

37 
	$is_FULL
(
QUEUE
* 
q
)

39 if(
q
->
‰⁄t
 =(q->
ª¨
+1)%
MAX_QUEUE_SIZE
)

43 
	}
}

45 
	$is_EMPTY
(
QUEUE
* 
q
)

47 if(
q
->
‰⁄t
 =q->
ª¨
)

51 
	}
}

53 
	$Enqueue
(
QUEUE
* 
q
, 
s
)

55 if(
	`is_FULL
(
q
))

59 
q
->
ª¨
 = (q->ª¨ + 1)%
MAX_QUEUE_SIZE
;

60 
q
->
Queue
[q->
ª¨
] = 
s
;

64 
	}
}

66 
	$Dequeue
(
QUEUE
* 
q
)

68 if(
	`is_EMPTY
(
q
))

72 
q
->
‰⁄t
 = (q->‰⁄t+1)%
MAX_QUEUE_SIZE
;

74  
q
->
Queue
[q->
‰⁄t
];

76 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/graph.h

1 
	sgøph


3 
	mnVîãx
;

4 
NODE
** 
	madjLi°
;

6 }
	tGRAPH
;

8 
GRAPH
* 
Cª©e_gøph
();

9 
Inô_gøph
(
GRAPH
*);

10 
Add_edge
(
GRAPH
*, ,);

11 
Make_gøph
(
GRAPH
*);

12 
Pröt_gøph
(
GRAPH
*);

14 
GRAPH
* 
	$Cª©e_gøph
(
size
)

16 
GRAPH
* 
g
 = (GRAPH*)
	`mÆloc
((GRAPH));

18 
g
->
nVîãx
 = 
size
;

19 
g
->
adjLi°
 = (
NODE
**)
	`mÆloc
((NODE*)*
size
);

21 
	`Inô_gøph
(
g
);

23  
g
;

24 
	}
}

26 
	$Inô_gøph
(
GRAPH
* 
g
)

28 
i
 = 0;

30 ; 
i
 < 
g
->
nVîãx
; ++i)

31 
g
->
adjLi°
[
i
] = 
NULL
;

32 
	}
}

34 
	$Add_edge
(
GRAPH
* 
g
, 
°¨t
, 
íd
)

36 
i
 = 0;

37 
NODE
* 
dummy
;

41 
dummy
 = 
	`Cª©e_node
(
íd
);

42 
dummy
->
√xt
 = 
g
->
adjLi°
[
°¨t
];

43 
g
->
adjLi°
[
°¨t
] = 
dummy
;

45 
	}
}

47 
	$Make_gøph
(
GRAPH
* 
g
)

49 
°¨t
 = 0, 
íd
 = 0;

51 
	`¥ötf
("\nEnter '-1'ÅoÉnd making graph");

55 
	`¥ötf
("\nEnter vertex: ");

56 
	`sˇnf
("%d", &
°¨t
);

58 if(
°¨t
 == -1)

63 
	`¥ötf
("Enterádjacent vertex: ");

64 
	`sˇnf
("%d", &
íd
);

66 if(
íd
 == -1)

69 
	`Add_edge
(
g
, 
°¨t
, 
íd
);

74 
	}
}

76 
	$Pröt_gøph
(
GRAPH
* 
g
)

78 
i
 = 0;

79 
NODE
* 
dummy
;

81 ; 
i
 < 
g
->
nVîãx
; ++i)

83 
	`¥ötf
("vîãx %d i†adja˚¡ wôh: ", 
i
);

85 
dummy
 = 
g
->
adjLi°
[
i
];

86 
dummy
 !
NULL
)

88 
	`¥ötf
("%d ", 
dummy
->
vîãx
);

89 
dummy
 = dummy->
√xt
;

92 
	`¥ötf
("\n");

94 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/linked_list.h

1 
	#WHITE
 0

	)

2 
	#GRAY
 1

	)

3 
	#BLACK
 2

	)

5 
	snode


7 
	mvîãx
;

8 
node
* 
	m√xt
;

10 }
	tNODE
;

12 
NODE
* 
Cª©e_node
();

13 
Inô_node
(
NODE
*, );

15 
NODE
* 
	$Cª©e_node
(
vîãx
)

17 
NODE
* 
dummy
 = (NODE*)
	`mÆloc
((NODE));

18 
	`Inô_node
(
dummy
, 
vîãx
);

20  
dummy
;

21 
	}
}

23 
	$Inô_node
(
NODE
* 
n
, 
vîãx
)

25 
n
->
vîãx
 = vertex;

26 
n
->
√xt
 = 
NULL
;

27 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_22/queue.h

1 
	#MAX_QUEUE_SIZE
 20

	)

3 
	squeue


5 
	mQueue
[
MAX_QUEUE_SIZE
];

6 
	m‰⁄t
;

7 
	mª¨
;

9 }
	tQUEUE
;

11 
QUEUE
* 
Cª©e_queue
();

12 
Inô_queue
(
QUEUE
*);

13 
is_FULL
(
QUEUE
*);

14 
is_EMPTY
(
QUEUE
*);

15 
Enqueue
(
QUEUE
*, );

16 
Dequeue
(
QUEUE
*);

18 
QUEUE
* 
	$Cª©e_queue
()

20 
QUEUE
* 
dummy
 = (QUEUE*)
	`mÆloc
((QUEUE));

22 
	`Inô_queue
(
dummy
);

24  
dummy
;

25 
	}
}

27 
	$Inô_queue
(
QUEUE
* 
q
)

29 
i
 = 0;

31 ;
i
<
MAX_QUEUE_SIZE
; ++i)

32 
q
->
Queue
[
i
] = 0;

34 
q
->
‰⁄t
 = q->
ª¨
 = 0;

35 
	}
}

37 
	$is_FULL
(
QUEUE
* 
q
)

39 if(
q
->
‰⁄t
 =(q->
ª¨
+1)%
MAX_QUEUE_SIZE
)

43 
	}
}

45 
	$is_EMPTY
(
QUEUE
* 
q
)

47 if(
q
->
‰⁄t
 =q->
ª¨
)

51 
	}
}

53 
	$Enqueue
(
QUEUE
* 
q
, 
s
)

55 if(
	`is_FULL
(
q
))

59 
q
->
ª¨
 = (q->ª¨ + 1)%
MAX_QUEUE_SIZE
;

60 
q
->
Queue
[q->
ª¨
] = 
s
;

64 
	}
}

66 
	$Dequeue
(
QUEUE
* 
q
)

68 if(
	`is_EMPTY
(
q
))

72 
q
->
‰⁄t
 = (q->‰⁄t+1)%
MAX_QUEUE_SIZE
;

74  
q
->
Queue
[q->
‰⁄t
];

76 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_4/Max_subArray.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<°dlib.h
>

4 
	~<limôs.h
>

6 
	#LOW
 0

	)

7 
	#HIGH
 1

	)

8 
	#SUM
 2

	)

10 
	gSèt
[3] = {0, 0, 0};

12 
Max_subAºay
([], , );

13 
Max_¸ossögAºay
([], , , );

15 
	$maö
 ()

17 
Àngth
 = 20;

18 
d©a
[20] = {0};

19 
i
 = 0;

21 
Sèt
[
LOW
] = 0;

22 
Sèt
[
HIGH
] = 
Àngth
-1;

23 
Sèt
[
SUM
] = 0;

25 
	`§™d
(
	`time
(
NULL
));

27 
	`¥ötf
("\ndata = ");

29 ; 
i
<
Àngth
; ++i)

31 
d©a
[
i
] = 
	`ønd
()%30 -Ñand()%40 +Ñand()%15 -Ñand()%11;

32 
	`¥ötf
(" %d", 
d©a
[
i
]);

35 
	`¥ötf
("\n");

37 
	`Max_subAºay
(
d©a
, 
Sèt
[
LOW
], Sèt[
HIGH
]);

39 
	`¥ötf
("\nMax subárray\n");

40 
	`¥ötf
("\n‰om = %d,Åÿ%d, sum = %d\n", 
Sèt
[
LOW
], Sèt[
HIGH
], Sèt[
SUM
]);

42 
i
 = 
Sèt
[
LOW
]; i <Sèt[
HIGH
]; ++i)

43 
	`¥ötf
(" %d", 
d©a
[
i
]);

45 
	`¥ötf
("\n");

47 
	}
}

49 
	$Max_subAºay
(
A
[], 
low
, 
high
)

51 
mid
;

52 
À·_sum
, 
right_sum
, 
¸oss_sum
;

53 
À·_low
, 
right_low
, 
¸oss_low
;

54 
À·_high
, 
right_high
, 
¸oss_high
;

56 if(
high
 =
low
)

58 
Sèt
[
LOW
] = 
low
;

59 
Sèt
[
HIGH
] = 
high
;

60 
Sèt
[
SUM
] = 
A
[
low
];

66 
mid
 = (
low
 +
high
)/2;

68 
	`Max_subAºay
(
A
, 
low
, 
mid
);

69 
À·_low
 = 
Sèt
[
LOW
];

70 
À·_high
 = 
Sèt
[
HIGH
];

71 
À·_sum
 = 
Sèt
[
SUM
];

73 
	`Max_subAºay
(
A
, 
mid
+1, 
high
);

74 
right_low
 = 
Sèt
[
LOW
];

75 
right_high
 = 
Sèt
[
HIGH
];

76 
right_sum
 = 
Sèt
[
SUM
];

78 
	`Max_¸ossögAºay
(
A
, 
low
, 
mid
, 
high
);

79 
¸oss_low
 = 
Sèt
[
LOW
];

80 
¸oss_high
 = 
Sèt
[
HIGH
];

81 
¸oss_sum
 = 
Sèt
[
SUM
];

83 i‡((
À·_sum
 >
right_sum
Ë&& (À·_sum >
¸oss_sum
))

85 
Sèt
[
LOW
] = 
À·_low
;

86 
Sèt
[
HIGH
] = 
À·_high
;

87 
Sèt
[
SUM
] = 
À·_sum
;

91 i‡((
right_sum
 >
À·_sum
Ë&& (right_sum >
¸oss_sum
))

93 
Sèt
[
LOW
] = 
right_low
;

94 
Sèt
[
HIGH
] = 
right_high
;

95 
Sèt
[
SUM
] = 
right_sum
;

101 
Sèt
[
LOW
] = 
¸oss_low
;

102 
Sèt
[
HIGH
] = 
¸oss_high
;

103 
Sèt
[
SUM
] = 
¸oss_sum
;

108 
	}
}

110 
	$Max_¸ossögAºay
(
A
[], 
low
, 
mid
, 
high
)

112 
À·_sum
 = 
INT_MIN
, 
right_sum
 = INT_MIN;

113 
sum
 = 0;

114 
i
 = 0, 
j
 = 0;

115 
max_À·
, 
max_right
;

118 
i
 = 
mid
; i>=
low
; --i)

120 
sum
 = sum + 
A
[
i
];

122 if(
sum
>
À·_sum
)

124 
À·_sum
 = 
sum
;

125 
max_À·
 = 
i
;

129 
sum
 = 0;

131 
j
 = 
mid
+1; j<=
high
; ++j)

133 
sum
 = sum + 
A
[
j
];

135 if(
sum
 > 
right_sum
)

137 
right_sum
 = 
sum
;

138 
max_right
 = 
j
;

143 
Sèt
[
LOW
] = 
max_À·
;

144 
Sèt
[
HIGH
] = 
max_right
;

145 
Sèt
[
SUM
] = 
À·_sum
 + 
right_sum
;

148 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_4/Playground/Max_subArray.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<°dlib.h
>

4 
	~<limôs.h
>

6 
	#LOW
 0

	)

7 
	#HIGH
 1

	)

8 
	#SUM
 2

	)

10 
	gSèt
[3] = {0, 0, 0};

12 
Max_subAºay
([], , );

13 
Max_¸ossögAºay
([], , , );

15 
	$maö
 ()

17 
Àngth
 = 20;

18 
d©a
[20] = {0};

19 
i
 = 0;

21 
Sèt
[
LOW
] = 0;

22 
Sèt
[
HIGH
] = 
Àngth
-1;

23 
Sèt
[
SUM
] = 0;

25 
	`§™d
(
	`time
(
NULL
));

27 
	`¥ötf
("\ndata = ");

29 ; 
i
<
Àngth
; ++i)

31 
d©a
[
i
] = 
	`ønd
()%30 -Ñand()%40 +Ñand()%15 -Ñand()%11;

32 
	`¥ötf
(" %d", 
d©a
[
i
]);

35 
	`¥ötf
("\n");

37 
	`Max_subAºay
(
d©a
, 
Sèt
[
LOW
], Sèt[
HIGH
]);

39 
	`¥ötf
("\nMax subárray : \n");

40 
	`¥ötf
("‰om = %d,Åÿ%d, sum = %d\n", 
Sèt
[
LOW
], Sèt[
HIGH
], Sèt[
SUM
]);

42 
i
 = 
Sèt
[
LOW
]; i <Sèt[
HIGH
]; ++i)

43 
	`¥ötf
(" %d", 
d©a
[
i
]);

45 
	`¥ötf
("\n");

47 
	}
}

49 
	$Max_subAºay
(
A
[], 
low
, 
high
)

51 
mid
;

52 
À·_sum
, 
right_sum
, 
¸oss_sum
;

53 
À·_low
, 
right_low
, 
¸oss_low
;

54 
À·_high
, 
right_high
, 
¸oss_high
;

56 if(
high
 =
low
)

58 
Sèt
[
LOW
] = 
low
;

59 
Sèt
[
HIGH
] = 
high
;

60 
Sèt
[
SUM
] = 
A
[
low
];

66 
mid
 = (
low
 +
high
)/2;

68 
	`Max_subAºay
(
A
, 
low
, 
mid
);

69 
À·_low
 = 
Sèt
[
LOW
];

70 
À·_high
 = 
Sèt
[
HIGH
];

71 
À·_sum
 = 
Sèt
[
SUM
];

73 
	`Max_subAºay
(
A
, 
mid
+1, 
high
);

74 
right_low
 = 
Sèt
[
LOW
];

75 
right_high
 = 
Sèt
[
HIGH
];

76 
right_sum
 = 
Sèt
[
SUM
];

78 
	`Max_¸ossögAºay
(
A
, 
low
, 
mid
, 
high
);

79 
¸oss_low
 = 
Sèt
[
LOW
];

80 
¸oss_high
 = 
Sèt
[
HIGH
];

81 
¸oss_sum
 = 
Sèt
[
SUM
];

83 i‡((
À·_sum
 >
right_sum
Ë&& (À·_sum >
¸oss_sum
))

85 
Sèt
[
LOW
] = 
À·_low
;

86 
Sèt
[
HIGH
] = 
À·_high
;

87 
Sèt
[
SUM
] = 
À·_sum
;

91 i‡((
right_sum
 >
À·_sum
Ë&& (right_sum >
¸oss_sum
))

93 
Sèt
[
LOW
] = 
right_low
;

94 
Sèt
[
HIGH
] = 
right_high
;

95 
Sèt
[
SUM
] = 
right_sum
;

101 
Sèt
[
LOW
] = 
¸oss_low
;

102 
Sèt
[
HIGH
] = 
¸oss_high
;

103 
Sèt
[
SUM
] = 
¸oss_sum
;

108 
	}
}

110 
	$Max_¸ossögAºay
(
A
[], 
low
, 
mid
, 
high
)

112 
À·_sum
 = 
INT_MIN
, 
right_sum
 = INT_MIN;

113 
sum
 = 0;

114 
i
 = 0, 
j
 = 0;

115 
max_À·
, 
max_right
;

118 
i
 = 
mid
; i>=
low
; --i)

120 
sum
 = sum + 
A
[
i
];

122 if(
sum
>
À·_sum
)

124 
À·_sum
 = 
sum
;

125 
max_À·
 = 
i
;

129 
sum
 = 0;

131 
j
 = 
mid
+1; j<=
high
; ++j)

133 
sum
 = sum + 
A
[
j
];

135 if(
sum
 > 
right_sum
)

137 
right_sum
 = 
sum
;

138 
max_right
 = 
j
;

143 
Sèt
[
LOW
] = 
max_À·
;

144 
Sèt
[
HIGH
] = 
max_right
;

145 
Sèt
[
SUM
] = 
À·_sum
 + 
right_sum
;

148 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_5/Permutation.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<°dlib.h
>

5 
	#SWAP
(
x
,
y
,
z
Ë(x=y, y=z, z=x;)

	)

7 
	sDATA
{

8 
	md©a
;

9 
	mkey
;

10 }
	tDATA
;

12 
≥rmuèti⁄
(
DATA
 [], );

14 
	$maö
()

16 
	`§™d
(
	`time
(
NULL
));

18 
DATA
 
¨øy
[20];

19 
Àngth
 = 20;

20 
i
=0;

22 
	`¥ötf
("\ndata=");

24 
i
=0; i<20; ++i)

25 
¨øy
[
i
].
d©a
 = i+1;

27 
i
=0; i<19; ++i)

29 
¨øy
[
i
].
key
 = 
	`ønd
()%(
Àngth
*length*length);

31 
	`¥ötf
(" %d", 
¨øy
[
i
].
d©a
);

34 
	`¥ötf
("\n");

36 
	`¥ötf
("\nkey: ");

37 
i
 = 0; i<
Àngth
; ++i)

38 
	`¥ötf
(" %d", 
¨øy
[
i
].
key
);

40 
	`≥rmuèti⁄
(
¨øy
, 
Àngth
);

42 
	`¥ötf
("\npermutation: ");

43 
i
0 ;i<
Àngth
; ++i)

44 
	`¥ötf
(" %d", 
¨øy
[
i
].
d©a
);

46 
	`¥ötf
("\n");

49 
	}
}

51 
	$≥rmuèti⁄
(
DATA
 
¨øy
[], 
Àngth
)

53 
DATA
 
dummy
;

54 
n
 = 0, 
m
;

56 
n
 = 1;Ç<
Àngth
; ++n)

58 
m
 = 
n
;

59 
dummy
 = 
¨øy
[
m
];

60 --
m
 >0 && 
dummy
.
key
 < 
¨øy
[m].key)

62 
¨øy
[
m
+1] =árray[m];

63 
¨øy
[
m
] = 
dummy
;

66 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_6/Heapsort.c

3 
	~<°dio.h
>

4 
	~<time.h
>

5 
	~<°dlib.h
>

7 
	#SWAP
(
a
, 
b
, 
c
Ë◊=b, b=c,c˜)

	)

9 
Max_hópify
([], , );

10 
Buûd_max_hóp
([], );

11 
Hóps‹t
([], );

13 
Pröt_¨øy
([], );

14 
R™d_¨øy
([], );

16 
	gmax_cou¡
 = 0;

18 
	$maö
()

20 
d©a
[11] = {0,5,3,6,1,8,2,9,4,10,7};

21 
i
, 
j
, 
k
;

22 
Àngth
 = 10;

24 
	`§™d
(
	`time
(
NULL
));

27 
	`Pröt_¨øy
(
d©a
, 
Àngth
);

29 
	`Hóps‹t
(
d©a
, 
Àngth
);

30 
	`Pröt_¨øy
(
d©a
, 
Àngth
);

33 
	}
}

35 
	$Max_hópify
(
d©a
[], 
posôi⁄
, 
hóp_size
)

37 
l
 = 
posôi⁄
*2;

38 
r
 = 
posôi⁄
*2 + 1;

39 
œrge°
=
posôi⁄
;

40 
dummy
 = 0;

42 if((
l
 <
hóp_size
Ë&& (
d©a
[l] > d©a[
posôi⁄
]))

43 
œrge°
 = 
l
;

45 
œrge°
 = 
posôi⁄
;

47 if((
r
 <
hóp_size
Ë&& (
d©a
[r] > d©a[
œrge°
]))

48 
œrge°
 = 
r
;

50 if(
œrge°
 !
posôi⁄
)

53 
dummy
 = 
d©a
[
posôi⁄
];

54 
d©a
[
posôi⁄
] = d©a[
œrge°
];

55 
d©a
[
œrge°
] = 
dummy
;

56 
	`Max_hópify
(
d©a
, 
œrge°
, 
hóp_size
);

57 
	`¥ötf
("\n%d: ", ++
max_cou¡
);

58 
	`Pröt_¨øy
(
d©a
,
hóp_size
);

60 
	}
}

62 
	$Buûd_max_hóp
(
d©a
[], 
Àngth
)

64 
hóp_size
 = 
Àngth
;

65 
i
 = 0;

67 
i
 = 
Àngth
/2; i>= 1; --i)

69 
	`Max_hópify
(
d©a
, 
i
, 
hóp_size
);

70 
	`¥ötf
("\n%d: ", ++
max_cou¡
);

71 
	`Pröt_¨øy
(
d©a
,
Àngth
);

74 
	}
}

76 
	$Hóps‹t
(
d©a
[], 
Àngth
)

78 
i
 = 0, 
dummy
;

80 
	`Buûd_max_hóp
(
d©a
, 
Àngth
);

82 
	`¥ötf
("\nMax:");

83 
	`Pröt_¨øy
(
d©a
, 
Àngth
);

85 
i
 = 
Àngth
; i >= 1; --i)

88 
dummy
 = 
d©a
[1];

89 
d©a
[1] = d©a[
i
];

90 
d©a
[
i
] = 
dummy
;

92 
Àngth
 =Üength-1;

93 
	`Max_hópify
(
d©a
,1,
Àngth
);

95 
	}
}

97 
	$Pröt_¨øy
(
d©a
[], 
Àngth
)

99 
i
 = 1;

101 ; 
i
<
Àngth
; ++i)

102 
	`¥ötf
("%d ", 
d©a
[
i
]);

104 
	`¥ötf
("\n");

105 
	}
}

107 
	$R™d_¨øy
(
d©a
[], 
Àngth
)

109 
i
 = 0;

111 
i
 = 0; i<
Àngth
; ++i)

112 
d©a
[
i
] = 
	`ønd
()%(
Àngth
*length*length);

113 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_8/Count_sort.c

1 
	~<°dio.h
>

2 
	~<time.h
>

3 
	~<°dlib.h
>

5 
Cou¡_s‹t
([], [], [], , );

6 
Pröt_¨øy
([], );

8 
	$maö
()

10 
d©a
[11], 
s‹ãd_d©a
[11] = {0};

11 
max_vÆ
 = 9;

12 *
cou¡_¨øy
 = 
	`mÆloc
(()*
max_vÆ
);

13 
i
;

15 
	`§™d
(
	`time
(
NULL
));

17 
i
 = 0; i<11; ++i)

18 
d©a
[
i
] = 
	`ønd
()%(
max_vÆ
-1);

20 
	`¥ötf
("Data :");

21 
	`Pröt_¨øy
(
d©a
, 10);

23 
	`Cou¡_s‹t
(
d©a
, 
s‹ãd_d©a
, 
cou¡_¨øy
, 
max_vÆ
, 10);

24 
	`¥ötf
("Sorted data :");

25 
	`Pröt_¨øy
(
s‹ãd_d©a
, 10);

29 
	}
}

31 
	$Cou¡_s‹t
(
d©a
[], 
s‹ãd_d©a
[], 
cou¡_¨øy
[], 
max_vÆ
, 
Àngth
)

33 
i
 = 0;

35 
i
 = 0; i<
max_vÆ
; ++i)

36 
cou¡_¨øy
[
i
] = 0;

38 
i
 = 1; i<=
Àngth
; ++i)

39 ++
cou¡_¨øy
[
d©a
[
i
]];

41 
i
 = 0; i<
max_vÆ
; ++i)

42 
cou¡_¨øy
[
i
] = count_array[i] + count_array[i-1];

44 
i
 = 
Àngth
; i>0; --i)

46 
s‹ãd_d©a
[
cou¡_¨øy
[
d©a
[
i
]]] = data[i];

47 --
cou¡_¨øy
[
d©a
[
i
]];

49 
	}
}

51 
	$Pröt_¨øy
(
d©a
[], 
Àngth
)

53 
i
 = 0;

55 ; 
i
<
Àngth
; ++i)

56 
	`¥ötf
("%d ", 
d©a
[
i
+1]);

58 
	`¥ötf
("\n\n");

59 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/Chapter_8/Radix_sort.c

3 
	~<°dio.h
>

4 
	~<time.h
>

5 
	~<°dlib.h
>

6 
	~<m©h.h
>

8 
Cou¡_s‹t
([], [], , );

9 
Radix_s‹t
([], [], , );

11 
Pröt_¨øy
([], );

13 
	$maö
()

15 
a
,
b
;

16 
d©a
[10][4] = {"cow", "dog", "cat", "mom", "pop", "lil", "dig", "big", "tab", "fox"};

17 
s‹ãd_d©a
[4][10] = {0};

19 
a
 = 0;á<10; ++a)

21 
b
 = 0;b<3; ++b)

22 
	`¥ötf
("%c", 
d©a
[
a
][
b
]);

24 
	`¥ötf
(" ");

27 
	`¥ötf
("\n");

30 
	}
}

32 
	$Radix_s‹t
(
d©a
[], 
s‹ãd_d©a
[], 
ba£
, 
Àngth
)

34 
i
 = 0;

38 
	}
}

40 
	$Cou¡_s‹t
(
d©a
[], 
s‹ãd_d©a
[], 
max_vÆ
, 
Àngth
)

42 
i
 = 0;

43 *
cou¡_¨øy
 = 
	`mÆloc
((Ë*(
max_vÆ
-'0'));

45 
i
 = 0; i<
max_vÆ
; ++i)

46 
cou¡_¨øy
[
i
] = 0;

48 
i
 = 1; i<=
Àngth
; ++i)

49 ++
cou¡_¨øy
[
d©a
[
i
]];

51 
i
 = 0; i<
max_vÆ
; ++i)

52 
cou¡_¨øy
[
i
] = count_array[i] + count_array[i-1];

54 
i
 = 
Àngth
; i>0; --i)

56 
s‹ãd_d©a
[
cou¡_¨øy
[
d©a
[
i
]]] = data[i];

57 --
cou¡_¨øy
[
d©a
[
i
]];

59 
	}
}

61 
	$Pröt_¨øy
(
d©a
[], 
Àngth
)

63 
i
 = 0;

65 ; 
i
<
Àngth
; ++i)

66 
	`¥ötf
("%d ", 
d©a
[
i
+1]);

68 
	`¥ötf
("\n\n");

69 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/playground/BFS/BFS.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"node.h
"

4 
	~"gøph.h
"

5 
	~"löked_li°.h
"

6 
	~"queue.h
"

8 
BFS
(
GRPAH
*, 
QUEUE
*, );

10 
	$maö
()

12 
GRAPH
* 
g
 = 
	`Cª©e_gøph
();

13 
QUEUE
* 
q
 = 
	`Cª©e_queue
();

14 
°¨t_node
 = 0;

16 
	`¥ötf
("\nEnter StartingÇode'sÇame: \n");

17 
	`sˇnf
("%d", &
°¨t_node
);

19 
	`öô_queue
(
q
);

21 
	`Make_gøph
(
g
);

23 
	`BFS
(
g
,
q
, 
°¨t_node
);

26 
	}
}

28 
	$BFS
(
GRAPH
* 
g
, 
QUEUE
* 
q
, 
°¨t
)

30 
adjLIST_NODE
* 
s
 = 
NULL
;

31 
adjLIST_NODE
* 
u
 = 
NULL
, 
v
 = NULL;

32 
off£t
 = 0;

34 
g
->
LIST
[
off£t
]->
cuºít
->
vîãx_«me
 =
°¨t
)

35 ++
off£t
;

37 
s
 = 
g
->
LIST
[
off£t
]->
cuºít
;

38 
s
->
°©e
 = 
GRAY
;

39 
s
->
∑ª¡
 = 
NULL
;

41 
	`Enqueue
(
q
, 
s
);

43 !
	`is_em±y
(
q
))

45 
u
 = 
	`Dequeue
(
q
);

46 
v
 = 
dummy
->
√xt
;

48 
v
 !
NULL
)

50 if(
v
->
cuºít
->
°©e
 =
BLACK
)

52 
v
->
cuºít
->
°©e
 = 
GRAY
;

53 
v
->
cuºít
->
∑ª¡
 = 
dummy
;

54 
	`Enqueue
(
q
, 
v
);

57 
u
->
cuºít
->
°©e
 = 
WHITE
;

60 
	`¥ötf
("\nBFS complete\n");

61 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/playground/BFS/graph.h

1 
	sgøph


3 
	mnVîãx
;

4 
adjLIST_NODE
** 
	mLIST
;

6 }
	tGRAPH
;

8 
GRAPH
* 
Cª©e_gøph
();

9 
Inô_gøph
(
GRAPH
*, );

10 
Make_gøph
(
GRAPH
*);

12 
GRAPH
* 
	$Cª©e_gøph
(
size
)

14 
GRAPH
* 
dummy
 = (GRAPH*)
	`mÆloc
((GRAPH));

16 
	`Inô_gøph
(
dummy
, 
size
);

18  
dummy
;

19 
	}
}

21 
	$Inô_gøph
(
GRAPH
* 
dummy
, 
size
)

23 
dummy
->
LIST
 = (
adjLIST_NODE
**)
	`mÆloc
((◊djLIST_NODE))*
size
);

25 
dummy
->
nVîãx
 = 
size
;

26 
	}
}

28 
	$Make_gøph
(
GRAPH
* 
dummy
)

30 
a
 = 0, 
«me
 = 0, 
node_cou¡
 = 0;

31 
adjLIST_NODE
* 
hód
 = 
dummy
->
LIST
;

32 
NODE
* 
node_±r
 = 
NULL
;

34 
a
 !(
dummy
->
nVîãx
+1))

36 
	`¥ötf
("Enter vertexÇame: \n");

37 
	`sˇnf
("%d", &
«me
);

39 
dummy
->
LIST
[
node_cou¡
++] = 
	`Cª©e_node
(
«me
);

41 
	`¥ötf
("//Vertex Added//\n");

43 ++
a
;

48 
	`¥ötf
("E¡î vîãx %d'†√ighb‹ vîãxÇame: \n", 
hód
->
cuºít
->
«me
);

49 
	`sˇnf
("%d", &
«me
);

51 if(
«me
 <= -1)

54 
dummy
->
LIST
[
node_cou¡
]->
vîãx_«me
 !
«me
)

55 ++
node_cou¡
;

57 
	`Add_adjLIST_NODE
(
hód
, 
dummy
->
LIST
[
node_cou¡
]);

59 
	`¥ötf
("\n//Neighbor VertexcAdded//\n");

62 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/playground/BFS/linked_list.h

1 
	sadj_li°_node


3 
NODE
* 
	mcuºít
;

4 
adj_li°_node
* 
	m√xt
;

6 }
	tadjLIST_NODE
;

8 
adjLIST_NODE
* 
Cª©e_adjLIST_NODE
();

9 
Inô_adjLIST_NODE
(
adjLIST_NODE
*);

10 
Add_adjLIST_NODE
(
adjLIST_NODE
* ,
NODE
*);

12 
adjLIST_NODE
* 
	$Cª©e_adjLIST_NODE
()

14 
adjLIST_NODE
* 
dummy
 = (adjLIST_NODE*)
	`mÆloc
((
adjLIST
));

16 
	`Inô_adjLIST
(
dummy
);

18  
dummy
;

19 
	}
}

21 
	$Inô_adjLIST_NODE
(
adjLIST_NODE
* 
dummy
)

23 
dummy
->
cuºít
 = 
NULL
;

24 
dummy
->
√xt
 = 
NULL
;

25 
	}
}

27 
	$Add_adjLIST
(
adjLIST_NODE
* 
cuºít_node
, 
NODE
* 
√xt
)

29 
adjLIST_NODE
* 
dummy
 = 
	`Cª©e_adjLIST_NODE
();

31 
dummy
->
cuºít
 = 
√xt
;

	@/home/g414/ABC/stuffs/Algorithms/playground/BFS/node.h

1 
	#BLACK
 0

	)

2 
	#WHITE
 1

	)

3 
	#GRAY
 2

	)

5 
	snode


7 
	mvîãx_«me
;

8 
	m°©e
;

9 
	mdi°™˚
;

10 
node
* 
	m∑ª¡
;

12 }
	tNODE
;

14 
NODE
* 
Cª©e_node
();

15 
Inô_node
(
NODE
*, );

17 
NODE
* 
	$Cª©e_node
(
«me
)

19 
NODE
* 
dummy
 = (NODE*)
	`mÆloc
((NODE));

21 
	`Inô_node
(
dummy
, 
«me
);

23  
dummy
;

24 
	}
}

26 
	$Inô_node
(
NODE
* 
dummy
, 
«me
)

28 
dummy
->
vîãx_«me
 = 
«me
;

29 
dummy
->
°©e
 = 
BLACK
;

30 
dummy
->
∑ª¡
 = 
NULL
;

31 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/playground/BFS/queue.h

1 
	#MAX_QUEUE_SIZE
 20

	)

3 
	squeue


5 
	m‰⁄t
;

6 
	mª¨
;

7 
adjLIST_NODE
* 
	mQueue
[
MAX_QUEUE_SIZE
];

8 }
	tQUEUE
;

10 
QUEUE
* 
Cª©e_queue
();

11 
Inô_queue
(
QUEUE
*);

12 
is_fuŒ
(
QUEUE
*);

13 
is_ímpy
(
QUEUE
*);

14 
Enqueue
(
QUEUE
*, 
adjLIST_NODE
*);

15 
adjLIST_NODE
* 
Dequeue
(
QUEUE
*);

17 
QUEUE
 
	$Cª©e_queue
()

19 
QUEUE
* 
dummy
 = (QUEUE*)
	`mÆloc
((QUEUE));

21 
	`Inô_queue
(
dummy
);

23  
dummy
;

24 
	}
}

26 
	$Inô_queue
(
QUEUE
* 
dummy
)

28 
a
 = 0;

30 
dummy
->
‰⁄t
 = 0;

31 
dummy
->
ª¨
 = 0;

33 ; 
a
<
MAX_QUEUE_SIZE
; ++a)

34 
dummy
->
Queue
[
a
] = 0;

35 
	}
}

37 
	$is_fuŒ
(
QUEUE
* 
dummy
)

39 if(
dummy
->
‰⁄t
 =(dummy->
ª¨
+1)%
MAX_QUEUE_SIZE
)

43 
	}
}

45 
	$is_em±y
(
QUEUE
* 
dummy
)

47 if(
dummy
->
‰⁄t
 =dummy->
ª¨
)

51 
	}
}

53 
	$Enqueue
(
QUEUE
* 
dummy
, 
adjLIST_NODE
* 
d©e
)

55 if(
	`is_fuŒ
(
dummy
))

59 
dummy
->
ª¨
 = (dummy->ª¨ + 1)%
MAX_QUEUE_SIZE
;

60 
dummy
->
Queue
[dummy->
ª¨
] = 
d©a
;

64 
	}
}

66 
adjLIST_NODE
* 
	$Dequeue
(
QUEUE
* 
dummy
)

68 if(
	`is_em±y
(
dummy
))

69  
NULL
;

72 
dummy
->
‰⁄t
 = (dummy->‰⁄t+1)%
max_QUEUE_SIZE
;

74  
dummy
->
Queueu
[dummy->
‰⁄t
];

76 
	}
}

	@/home/g414/ABC/stuffs/Algorithms/playground/testing.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	sd©a


6 
	mvÆue
;

7 
d©a
* 
	m√xt
;

9 }
	tDATA
;

11 
DATA
* 
Cª©e
();

12 
Inô
(
DATA
*, );

13 
C⁄√˘
(
DATA
*, DATA*);

16 
DATA
* 
	$Cª©e
(
vÆue
)

18 
DATA
* 
dummy
 = (DATA*)
	`mÆloc
((DATA));

20 
	`Inô
(
dummy
, 
vÆue
);

22  
dummy
;

23 
	}
}

25 
	$Inô
(
DATA
* 
dummy
, 
v
)

27 
dummy
->
vÆue
 = 
v
;

28 
dummy
->
√xt
 = 
NULL
;

29 
	}
}

31 
	$C⁄√˘
(
DATA
* 
d1
, DATA* 
d2
)

33 
d1
->
√xt
 = 
d2
;

34 
	}
}

36 
	$maö
()

38 
DATA
* 
dummy
 = 
	`Cª©e
(1);

39 
DATA
* 
dummy2
 = 
	`Cª©e
(2);

40 
DATA
* 
hód
 = 
dummy
;

41 
	`C⁄√˘
(
dummy
, 
dummy2
);

43 
	`¥ötf
("\n");

45 
hód
 !
NULL
)

47 
	`¥ötf
("%d ", 
hód
->
vÆue
);

49 
hód
 = hód->
√xt
;

52 
	`¥ötf
("\nEND\n");

55 
	}
}

	@/home/g414/ABC/stuffs/Assembly/Chapter_4/test.S

1 .
d©a


2 
	gnum1
: .
w‹d
 8

3 
num2
: .
w‹d
 16

4 
numsum
: .
w‹d
 0

5 
°r
: .
asciz
 "%d\n"

7 .
ãxt


8 .
globl
 
maö


9 
maö
: 
ldr
 
r0
, =
num1


10 
ldr
 
r1
, =
num2


11 
ldr
 
r2
, =
numsum


12 
ldr
 
r0
, [r0]

13 
ldr
 
	gr1
, [
r1
]

14 
add
 
	gr0
,Ñ0, 
r1


15 
°r
 
	gr0
, [
r2
]

16 
mov
 
	gr1
, 
r0


17 
ldr
 
	gr0
, =
°r


18 
°mfd
 
•
!, {
	gÃ
}

19 
bl
 
¥ötf


20 
ldmfd
 
	g•
!, {
	gÃ
}

21 
mov
 
	gpc
, 
	gÃ


	@/home/g414/ABC/stuffs/Assembly/Chapter_5/test.S

2 @ 
NŸ
 
	gD⁄e


4 .
d©a


5 
	ghi
: .
asciz
 "Hi\n"

6 
ã°
: .
asciz
 "r1 = %d\n"

8 .
ãxt


9 .
globl
 
maö


10 
maö
: 
mov
 
r4
, #0

11 
ldr
 
	gr0
, =
hi


12 
°mfd
 
•
!, {
	gÃ
}

13 
bl
 
¥ötf


15 
	glo›
: 
add
 
r4
, 
	gr4
, #1

16 
cmp
 
	gr4
, #10

17 
bgt
 
íd


18 
ldr
 
	gr0
, =
hi


19 
bl
 
¥ötf


20 
b
 
lo›


22 
íd
: 
ldmfd
 
•
!, {
	gÃ
}

23 
mov
 
	gr0
, #0

24 
mov
 
	gpc
, 
	gÃ


	@/home/g414/ABC/stuffs/Assembly/Chapter_5/test2.S

1 .
d©a


2 
	gíãr
: .
asciz
 "Enter x:"

3 
f‹m©
: .
asciz
 "%d"

4 
ªsu…
: .
asciz
 "%d! = %d"

7 .
ãxt


8 .
globl
 
maö


9 
Á˘o
: 
cmp
 
r0
, #2

10 
mov
 
	gr1
, #1

11 
b…
 
d⁄e


12 
°mfd
 
	g•
!, {
	gÃ
}

13 
mov
 
	gr1
, 
r0


14 
sub
 
	gr0
,Ñ0, #1

15 
b
 
Á˘o


16 
	gd⁄e
: 
ldmfd
 
•
!, {
	gÃ
}

17 
mul
 
	gr0
, 
	gr1
, 
r0


18 
mov
 
	gpc
, 
Ã


20 
	gmaö
: 
°mfd
 
•
!, {
	gÃ
}

21 
sub
 
	g•
, sp, #4

22 : 
ldr
 
r0
, =
íãr


23 
bl
 
¥ötf


24 
ldr
 
r0
,=
f‹m©


25 
mov
 
r1
, 
•


26 
bl
 
sˇnf


27 
mov
 
	gr3
, 
r0


28 
ldmfd
 
	g•
!, {
	gÃ
}

29 
cmp
 
	gr3
, #1

30 
bÀq
 
Á˘o


31 
moveq
 
	gr1
, 
r3


32 
ldªq
 
	gr0
, =
ªsu…


33 
bÀq
 
¥ötf


34 
beq
 

35 
mov
 
r0
, #0

36 
ldmfd
 
	g•
!, {
	gÃ
}

37 
mov
 
	gpc
, 
	gÃ


	@/home/g414/ABC/stuffs/Assembly/Chapter_5/test_for.S

1 .
d©a


2 
	ghi
: .
asciz
 "Hi\n"

3 
ã°
: .
asciz
 "%d\n"

4 .
ãxt


5 .
globl
 
maö


6 
maö
:

7 
mov
 
r4
, #99

8 
°mfd
 
	g•
!, {
	gr4
, 
	gÃ
}

9 
ldr
 
	gr0
, 
r4


10 
bl
 
¥ötf


11 
ldr
 
	gr0
, =
hi


12 
mov
 
r4
, #0

13 
	glo›
: 
bl
 
¥ötf


14 
add
 
r4
, 
	gr4
, #1

15 
cmp
 
	gr4
, #10

16 
ldæt
 
	gr0
, =
hi


17 
b…
 
lo›


18 
ldmfd
 
•
!, {
	gr4
, 
	gÃ
}

19 
ldr
 
	gr0
, 
r4


20 
bl
 
¥ötf


21 
mov
 
	gr0
, #0

22 
mov
 
	gpc
, 
	gÃ


	@/home/g414/ABC/stuffs/Assembly/IEEEsingle.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#BIAS
 127

	)

5 
	#MAX_BUFFER_SIZE
 1024

	)

7 
	gBUFFER
[
MAX_BUFFER_SIZE
];

8 
	gFRAC_BUFFER
[
MAX_BUFFER_SIZE
];

9 
	gFRAC_RESULT
[
MAX_BUFFER_SIZE
];

10 
	gSIGN_FLAG
;

14 
	ms
:1;

15 
	me
:8;

16 
	mm
:23;

18 }
	tIEEEsögÀ
;

22 
	möãgî
;

23 
	m‰a˘i⁄
;

24 
	möt_Àngth
;

25 
	m‰ac_Àngth
;

27 }
	tOrigöÆ_D©a
;

29 
IEEEsögÀ
* 
Cª©e_Êﬂt
();

30 
OrigöÆ_D©a
* 
Cª©e_d©a
();

34 
Gëlöe
();

35 
Ch¨2öt
(, );

36 
Så2d©a
(
OrigöÆ_D©a
*);

40 
N‹mÆize
(
IEEEsögÀ
*);

41 
D©a2IEEE
(
OrigöÆ_D©a
*, 
IEEEsögÀ
*);

42 
‰ac2bö¨y
(
OrigöÆ_D©a
*);

52 
IEEEsögÀ
* 
Add
(IEEEsingle*, IEEEsingle*);

53 
IEEEsögÀ
* 
Subåa˘
(IEEEsingle*, IEEEsingle*);

54 
IEEEsögÀ
* 
Mu…ùly
(IEEEsingle*, IEEEsingle*);

55 
IEEEsögÀ
* 
Divide
(IEEEsingle*, IEEEsingle*);

61 
IEEEsögÀ
* 
	$Cª©e_Êﬂt
()

63 
IEEEsögÀ
* 
dummy
 = (IEEEsögÀ*)
	`mÆloc
((IEEEsingle));

65 if(
dummy
 =
NULL
)

66  
NULL
;

68 
dummy
->
s
 = 0;

69 
dummy
->
e
 = 0;

70 
dummy
->
m
 = 0;

72  
dummy
;

73 
	}
}

75 
OrigöÆ_D©a
* 
	$Cª©e_d©a
()

77 
OrigöÆ_D©a
* 
dummy
 = (OrigöÆ_D©a*)
	`mÆloc
((Original_Data));

79 if(
dummy
 =
NULL
)

80  
NULL
;

82 
dummy
->
öãgî
 = 0;

83 
dummy
->
‰a˘i⁄
 = 0;

84 
dummy
->
öt_Àngth
 = 0;

85 
dummy
->
‰ac_Àngth
 = 0;

87  
dummy
;

88 
	}
}

94 
	$Gëlöe
()

96 
c
, 
i
 = 0;

98 (
c
 = 
	`gëch¨
()) != '\n')

99 if(((
c
 >= '0') && (c <= '9')) || (c == '.') || (c == '-'))

100 
BUFFER
[
i
++] = 
c
;

103 
	`¥ötf
("InputÉrror: Enter input dataás float");

109 
BUFFER
[
i
] = 
EOF
;

112 
	}
}

114 
	$Ch¨2öt
(
°¨t
, 
íd
)

116 
°r
 = 
°¨t
, 
dec
 = 0;

117 
ªsu…
 = 0, 
tmp
 = 0;

119 
SIGN_FLAG
 = 0;

121 if(
°r
 =0 && 
BUFFER
[str] == '-')

123 
SIGN_FLAG
 = 1;

124 ++
°r
;

127 
°r
 !
íd
)

129 
tmp
 = 
BUFFER
[
°r
] - '0';

131 
ªsu…
 =Ñesu…*
dec
 + 
tmp
;

133 if(
dec
 == 0)

134 
dec
 = 10;

136 ++
°r
;

139  
SIGN_FLAG
 ? -
ªsu…
 :Ñesult;

140 
	}
}

142 
	$Så2d©a
(
OrigöÆ_D©a
* 
ªsu…
)

144 
i
 = 0;

145 
ødix
 = 0;

147 if(
	`Gëlöe
() == -1)

150 
BUFFER
[
i
] != '.')

151 ++
i
;

153 
ødix
 = 
i
;

155 
ªsu…
->
öãgî
 = 
	`Ch¨2öt
(0, 
ødix
);

157 if(
SIGN_FLAG
)

158 
ªsu…
->
öt_Àngth
 = 
ødix
 - 1;

160 
ªsu…
->
öt_Àngth
 = 
ødix
;

162 
i
++;

164 
BUFFER
[
i
] !
EOF
)

165 ++
i
;

167 
ªsu…
->
‰a˘i⁄
 = 
	`Ch¨2öt
(
ødix
 + 1, 
i
);

168 
ªsu…
->
‰ac_Àngth
 = (
i
 - 1)- 
ødix
;

171 
	}
}

175 
	$N‹mÆize
(
IEEEsögÀ
* 
d©a
)

178 
	}
}

180 
D©a2IEEE
(
OrigöÆ_D©a
* 
d©a
, 
IEEEsögÀ
* 
ªsu…
);

185 
	$Føc2bö¨y
(
OrigöÆ_D©a
* 
d©a
)

187 
˙t
 = 0, 
ödex
 = 
d©a
->
öt_Àngth
 + 1;

188 
lo›_˙t
, 
öfi_˙t
 = 0;

189 
tmp
;

191 
FRAC_BUFFER
[
˙t
++] = 0;

193 
BUFFER
[
ödex
] !
NULL
)

195 
FRAC_BUFFER
[
˙t
++] = 
BUFFER
[
ödex
++];

198 
FRAC_BUFFER
[
˙t
] = 
BUFFER
[
ödex
];

200 
lo›_˙t
 = 
˙t
;

201 --
lo›_˙t
;

203 (
öfi_˙t
 !
MAX_INFI
Ë&& !
FRAC_FINISH_FLAG
)

205 
lo›_˙t
 != 0)

207 
tmp
 = 
FRAC_BUFFER
[
lo›_˙t
] - '0';

208 
tmp
 *= 2;

219 
IEEEsögÀ
* 
	`Add
(IEEEsögÀ* 
›î1
, IEEEsögÀ* 
›î2
)

224 
IEEEsögÀ
* 
	`Subåa˘
(IEEEsögÀ* 
›î1
, IEEEsögÀ* 
›î2
)

229 
IEEEsögÀ
* 
	`Mu…ùly
(IEEEsögÀ* 
›î1
, IEEEsögÀ* 
›î2
)

234 
IEEEsögÀ
* 
	`Divide
(IEEEsögÀ* 
›î1
, IEEEsögÀ* 
›î2
)

241 
	`maö
()

244 
IEEEsögÀ
* 
dummy
 = 
	`Cª©e_Êﬂt
();

245 
OrigöÆ_D©a
* 
d©a
 = 
	`Cª©e_d©a
();

247 if(
dummy
 =
NULL
 && 
d©a
 != NULL)

249 
	`¥ötf
("error: Can't create IEEEsingle format data\n");

251 
	`‰ì
(
d©a
);

254 if(
dummy
 !
NULL
 && 
d©a
 == NULL)

256 
	`¥ötf
("error: Can't create Original_Data structure \n");

258 
	`‰ì
(
dummy
);

263 
	`¥ötf
("sizêö bô = %ld\n", (
IEEEsögÀ
)*8);

265 
	`¥ötf
("sig¿%d,Éxp⁄íà%d, m™tisß = %d\n", 
dummy
->
s
, dummy->
e
, dummy->
m
);

268 if(
	`Så2d©a
(
d©a
) == -1)

271 
	`¥ötf
("%d.%d\n", 
d©a
->
öãgî
, d©a->
‰a˘i⁄
);

272 
	`¥ötf
("öàÀngth = %d, fø¯Àngth = %d\n", 
d©a
->
öt_Àngth
, d©a->
‰ac_Àngth
);

	@/home/g414/ABC/stuffs/Assembly/test.s

1 .
d©a


2 
	g°r
: .
asciz
 "Hello ARM!!\n"

4 .
ãxt


5 .
globl
 
maö


7 
maö
: 
°mfd
 
•
!, {
	gÃ
}

8 
ldr
 
	gr0
, =
°r


9 
bl
 
¥ötf


10 
mov
 
r0
, #0

11 
ldmfd
 
	g•
!,{
	gÃ
}

12 
mov
 
	gpc
,
	gÃ


	@/home/g414/ABC/stuffs/C_Programming/playground/Command_programing/Input_command.c

1 
	~<°dio.h
>

3 
Gëlöe
();

4 
Puéöe
();

5 
C›yög
();

7 
	$Gëlöe
()

9 
c
;

11  
c
 = 
	`gëch¨
();

12 
	}
}

14 
	$Puéöe
(
c
)

16 
	`putch¨
(
c
);

17 
	}
}

19 
	$C›yög
()

21 
i
;

23 (
i
 = 
	`Gëlöe
()Ë!
EOF
)

25 
	`¥ötf
("\n.");

26 
	`Puéöe
(
i
);

29 
	`¥ötf
("\n");

30 
	}
}

32 
	$maö
 ()

35 
	`¥ötf
("\ntesting\n");

36 
	`C›yög
();

38 
	`¥ötf
("Copying Complete\n");

41 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/Coordinate_Shift.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

4 
	#MAX_LINE
 200

	)

5 
	#DIMENSION_3
 3

	)

6 
	#PI
 3.14159265359

	)

13 
toCylö
([], []);

14 
toSphî
([], []);

15 
MAC
([], , [], );

17 
CÀ™ög_Aºay
([]);

18 
Gëlöe
([], );

19 
Ctof
([], []);

20 
PrötD©a
([]);

21 
PrötLöe
([]);

23 
	$maö
()

25 
buf„r
[
MAX_LINE
];

26 
Mode
 = 0, 
D©aI≈ut
 = 0, 
i
;

27 
D©a
[
DIMENSION_3
];

28 
Tøns_D©a
[
DIMENSION_3
];

30 
D©aI≈ut
 >= 0)

32 
	`CÀ™ög_Aºay
(
buf„r
);

34 
i
 = 0; i<3; ++i)

35 
Tøns_D©a
[
i
] = 0;

37 
D©aI≈ut
 = 
	`Gëlöe
(
buf„r
, 
MAX_LINE
);

38 
	`gëch¨
();

40 
	`Ctof
(
buf„r
, 
D©a
);

41 
	`PrötLöe
("\nto Cylindrical: Enter 1\nto Spherical: Enter 2\n");

42 
	`sˇnf
("%d", &
Mode
);

44 if(
Mode
 == 1)

46 
	`toCylö
(
D©a
, 
Tøns_D©a
);

47 
	`PrötLöe
("\n(Rho, Phi, z) =>");

48 
	`PrötD©a
(
Tøns_D©a
);

50 if(
Mode
 == 2)

52 
	`toSphî
(
D©a
, 
Tøns_D©a
);

53 
	`PrötLöe
("\n(r, Theta, Phi) =>");

54 
	`PrötD©a
(
Tøns_D©a
);

58 
	`PrötLöe
("\nError");

63 
	}
}

65 
	$Gëlöe
(
s
[], 
lim
)

67 
c
, 
i
;

69 
	`PrötLöe
("Enter string:");

71 
i
=0; i<
lim
-1 && (
c

	`gëch¨
()Ë!
EOF
 && c != '\n'; ++i)

72 
s
[
i
] = 
c
;

74 if(
i
 == 0)

77 if(
c
 == '\n')

78 
s
[
i
++] = '\n';

80 
s
[
i
] = '\0';

82  
i
;

83 
	}
}

85 
	$CÀ™ög_Aºay
(
s
[])

87 
i
=0;

89 ; 
s
[
i
] != '\0'; ++i)

90 
s
[
i
] = 0;

91 
	}
}

94 
	$PrötLöe
(
s
[])

96 
i
;

98 
i
=0; 
s
[i] != '\0'; ++i)

99 
	`putch¨
(
s
[
i
]);

100 
	}
}

102 
	$PrötD©a
(
d©a
[])

104 
i
=0;

106 
	`¥ötf
("\n(");

107 ; 
i
<2; ++i)

108 
	`¥ötf
("%f, ", 
d©a
[
i
]);

110 
	`¥ötf
("%f)\n", 
d©a
[
i
]);

111 
	}
}

113 
	$Ctof
(
s
[], 
d©a
[])

115 
i
, 
j
, 
k
 = 0, 
sign
, 
poöt
;

116 
™s
;

118 
j
 = 0;

120 
sign
 = 1;

121 
poöt
 = 0;

123 
™s
 = 0;

125 
i
=0; 
s
[i] != '\0'; ++i)

126 if(
s
[
i
] == '-' || s[i] == '+')

127 
sign
 = (
s
[
i
] == '-') ? -1 : 1;

128 if(
s
[
i
] >= '0' && s[i] <= '9')

129 
™s
 =áns*10 + (
s
[
i
] - '0');

130 if(
s
[
i
] == '.')

131 
poöt
 = 
i
;

132 if(
s
[
i
] == ',' || s[i] == ')')

134 if(
poöt
 > 0)

136 
poöt
 = 
i
 -Öoint;

137 
j
 = 0; j<
poöt
; ++j)

138 
™s
 /= 10;

141 
d©a
[
k
++] = 
™s
*
sign
;

142 
™s
 = 0;

146 
	}
}

148 
	$MAC
(
m©1
[], 
size1
, 
m©2
[], 
size2
)

150 
i
;

151 
™s
=0;

153 
i
 = 0; i<
size1
; ++i)

154 
™s
 =án†+ 
m©1
[
i
]*
m©2
[i];

156  
™s
;

157 
	}
}

159 
	$toCylö
(
d©a
[], 
ch™ged
[])

161 
i
, 
j
;

162 
Phi
 = 
	`©™
(
d©a
[1]/data[0]);

163 
Cylö_M©rix
[
DIMENSION_3
][DIMENSION_3] = { {
	`cos
(
Phi
), 
	`sö
(Phi), 0},

164 {-
	`sö
(
Phi
), 
	`cos
(Phi) ,0},

167 
i
 =0; i<3; ++i)

168 
ch™ged
[
i
] = 
	`MAC
(
Cylö_M©rix
[i], 3, 
d©a
, 3);

169 
	}
}

171 
	$toSphî
(
d©a
[], 
ch™ged
[])

173 
i
, 
j
;

174 
Phi
 = 
	`©™
(
d©a
[1]/d©a[0]), 
Thëa
 =áèn(
	`sqπ
(data[0]*data[0] + data[1]*data[1])/data[2]);

176 
Cylö_M©rix
[
DIMENSION_3
][DIMENSION_3] = { {
	`sö
(
Thëa
)*
	`cos
(
Phi
), sin(Theta)*sin(Phi), cos(Theta)},

177 {
	`cos
(
Thëa
)*cos(Thëa), cos(Thëa)*
	`sö
(
Phi
), -sin(Theta)},

178 {-
	`sö
(
Phi
), 
	`cos
(Phi), 0}};

180 
i
 =0; i<3; ++i)

181 
ch™ged
[
i
] = 
	`MAC
(
Cylö_M©rix
[i], 3, 
d©a
, 3);

182 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/Fibo.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
a
,
b
,
c
;

6 
i
,
n
;

8 
a
 = 0;

9 
b
 = 1;

11 
	`¥ötf
("ToÇ fibonacciÇumber: ");

12 
	`sˇnf
("%d", &
n
);

14 
	`¥ötf
("\n");

15 
	`¥ötf
("%d %d ", 
a
,
b
);

16 
i
=2; i<=
n
; ++i)

18 
c
 = 
a
 + 
b
;

19 
a
 = 
b
;

20 
b
 = 
c
;

22 
	`¥ötf
("%d ",
c
);

26 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/Input_command.c

1 
	~<°dio.h
>

3 
Gëlöe
();

4 
Puéöe
();

5 
C›yög
();

7 
	$Gëlöe
()

9 
c
;

11  
c
 = 
	`gëch¨
();

12 
	}
}

14 
	$Puéöe
(
c
)

16 
	`putch¨
(
c
);

17 
	}
}

19 
	$C›yög
()

21 
i
;

23 (
i
 = 
	`Gëlöe
()Ë!
EOF
)

25 
	`¥ötf
("\n.");

26 
	`Puéöe
(
i
);

29 
	`¥ötf
("\n");

30 
	}
}

32 
	$maö
 ()

35 
	`¥ötf
("\ntesting\n");

36 
	`C›yög
();

38 
	`¥ötf
("Copying Complete\n");

39 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/Newton_method.c

1 
	~<°dio.h
>

2 
	~<m©h.h
>

4 
Newt⁄
(, );

6 
	$maö
 ()

8 
squ¨e
 = 0, 
n
 = 0;

10 
	`¥ötf
("SquareÑoot of what?: ");

11 
	`sˇnf
("%d", &
squ¨e
);

12 
	`¥ötf
("\nCalculatingÇÅimes: ");

13 
	`sˇnf
("%d", &
n
);

15 
	`¥ötf
("\nAnswî: %.10f\n", 
	`Newt⁄
(
squ¨e
, 
n
));

18 
	}
}

20 
	$Newt⁄
(
squ¨e
, 
n
)

22 
i
 = 0;

23 
vÆue
 = 1;

25 
i
 = 0; i<
n
; ++i)

26 
vÆue
 = (vÆuê+ 
squ¨e
/value)/2;

28  
vÆue
;

29 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/Prime_number.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
i
 = 0, 
j
 = 0;

6 
n
 = 2, 
Êag
 = 0;

8 ; 
n
< 100; ++n)

10 
i
 = 2;i<
n
;++i)

12 if((
n
%
i
)==0)

14 
Êag
 = 1;

18 
Êag
 = 0;

21 if(
Êag
 == 0)

22 
	`¥ötf
("%d ", 
n
);

26 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/String.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	$maö
()

6 
dummy
 = 0;

7 *
°r
 = (*)
	`mÆloc
(());

8 
i
 = 2, 
j
 = 0;

10 ;(
dummy
 = 
	`gëch¨
()Ë!'\n'; ++
i
)

12 
°r
 = (*)
	`ªÆloc
(°r, ()*
i
);

13 
°r
[
i
] = 
dummy
;

15 ++
j
;

18 
°r
[
j
] = '\0';

20 
i
 = 0; 
°r
[i] == '\0'; ++i)

21 
	`¥ötf
("%c+1", 
°r
[
i
]);

23 
	`¥ötf
("\n");

26 
	}
}

	@/home/g414/ABC/stuffs/C_Programming/playground/test_j.c

1 
	~<°dio.h
>

3 
	$maö
 ()

5 * 
±r1
 = 0x00008;

6 * 
±r2
 = 0x00008;

8 
	`¥ötf
("\n%∞%∞\n", 
±r1
+1, 
±r2
+1);

11 
	}
}

	@/home/g414/ABC/stuffs/Data_Structure/array.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	#MAX_ARRAY_SIZE
 50

	)

8 
	tDATA
;

12 
DATA
 
	mARR
[
MAX_ARRAY_SIZE
];

13 
	mnum_em±y
;

14 }
	tARRAY
;

18 
öô_Aºay
(
ARRAY
*);

20 
is_Em±y
(
ARRAY
*);

21 
is_FuŒ
(
ARRAY
*);

23 
ö£π_D©a
(
ARRAY
*, 
DATA
);

24 
DATA
 
gë_D©a
(
ARRAY
*, );

26 
˛ór_Aºay
(
ARRAY
*);

27 
¥öt_Aºay
(
ARRAY
*);

31 
	$öô_Aºay
(
ARRAY
* 
¨r
)

33 
i
 = 0;

35 ; 
i
< 
MAX_ARRAY_SIZE
; ++i)

36 
¨r
->
ARR
[
i
] = 0;

38 
¨r
->
num_em±y
 = 
MAX_ARRAY_SIZE
;

39 
	}
}

41 
	$is_Em±y
(
ARRAY
* 
¨r
)

45 if(
¨r
->
num_em±y
 =
MAX_ARRAY_SIZE
)

49 
	}
}

51 
	$is_FuŒ
(
ARRAY
* 
¨r
)

55 if(
¨r
->
num_em±y
 == 0)

59 
	}
}

63 
	$ö£π_D©a
(
ARRAY
* 
¨r
, 
DATA
 
d
)

65 if(
	`is_FuŒ
(
¨r
))

66 
	`¥ötf
("Array is Full\n");

69 
¨r
->
ARR
[
MAX_ARRAY_SIZE
 -áº->
num_em±y
] = 
d
;

70 
¨r
->
num_em±y
--;

72 
	}
}

75 
DATA
 
	$gë_D©a
(
ARRAY
* 
¨r
, 
idx
)

77 if(
	`is_Em±y
(
¨r
))

79 
	`¥ötf
("Array is Empty\n");

84 
¨r
->
num_em±y
++;

85  
¨r
->
ARR
[
idx
];

87 
	}
}

90 
	$˛ór_Aºay
(
ARRAY
* 
¨r
)

92 
i
 = 0;

94 ; 
i
< 
MAX_ARRAY_SIZE
; ++i)

95 
¨r
->
ARR
[
i
] = 0;

96 
	}
}

98 
	$¥öt_Aºay
(
ARRAY
* 
¨r
)

100 
i
 = 0;

102 ; 
i
< 
MAX_ARRAY_SIZE
 - 
¨r
->
num_em±y
; ++i)

103 
	`¥ötf
("%d ", 
¨r
->
ARR
[
i
]);

105 
	`¥ötf
("\n");

106 
	}
}

110 
	$maö
()

112 
ARRAY
 
¨r
;

114 
	`öô_Aºay
(&
¨r
);

115 
i
;

116 
i
 = 0; i < 11; i += 3)

117 
	`ö£π_D©a
(&
¨r
, 
i
);

119 
	`¥öt_Aºay
(&
¨r
);

121 
	`¥ötf
("%d\n", 
	`gë_D©a
(&
¨r
, 0));

123 
	}
}

	@/home/g414/ABC/stuffs/Data_Structure/bin_tree.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

8 
	snode


10 
	mvÆue
;

11 
node
* 
	mÀ·
;

12 
node
* 
	mright
;

13 }
	tNODE
;

15 
NODE
* 
	groŸ
;

17 
NODE
* 
¸óã_Node
();

18 
öô_Node
(
NODE
*, );

20 
is_thîe
();

21 
NODE
* 
FödMö
(NODE*);

23 
add_Node
(
NODE
*);

24 
NODE
* 
dñëe_Node
(NODE*, );

26 
¥öt_Node
(
NODE
*);

30 
NODE
* 
	$¸óã_Node
()

32 
NODE
* 
tmp
 = (NODE*)
	`mÆloc
((NODE));

34  
tmp
;

35 
	}
}

37 
	$öô_Node
(
NODE
* 
n
, 
d©a
)

39 
n
->
vÆue
 = 
d©a
;

40 
n
->
À·
 = 
NULL
;

41 
n
->
right
 = 
NULL
;

42 
	}
}

44 
	$is_thîe
(
èrgë
)

46 
NODE
* 
åav
 = 
roŸ
;

48 
åav
 !
NULL
)

49 if(
èrgë
 =
åav
->
vÆue
)

51 if(
èrgë
 < 
åav
->
vÆue
)

52 
åav
 =Åøv->
À·
;

54 
åav
 =Åøv->
right
;

57 
	}
}

59 
NODE
* 
	$FödMö
(
NODE
* 
n
)

61 
NODE
* 
åav
 = 
n
;

63 
åav
->
À·
 !
NULL
)

64 
åav
 =Åøv->
À·
;

66  
åav
;

67 
	}
}

70 
	$add_Node
(
NODE
* 
n
)

72 
NODE
* 
åav
 = 
roŸ
;

74 
åav
->
À·
 !
NULL
 &&Åøv->
right
 != NULL)

75 if(
	`is_thîe
(
n
->
vÆue
))

77 
	`¥ötf
("thêègë(%dËi†Æªady i¿thêåì\n", 
n
->
vÆue
);

80 if(
n
->
vÆue
 < 
åav
->value)

81 
åav
 =Åøv->
À·
;

83 
åav
 =Åøv->
right
;

85 if(
n
->
vÆue
 < 
åav
->value)

86 
åav
->
À·
 = 
n
;

88 
åav
->
right
 = 
n
;

90 
	}
}

93 
NODE
* 
	$dñëe_Node
(
NODE
* 
n
, 
èrgë
)

95 if(
n
 =
NULL
)

96  
n
;

97 if(
èrgë
 < 
n
->
vÆue
)

98 
n
->
À·
 = 
	`dñëe_Node
“->À·, 
èrgë
);

99 if(
èrgë
 > 
n
->
vÆue
)

100 
n
->
right
 = 
	`dñëe_Node
“->right, 
èrgë
);

103 if(
n
->
À·
 =
NULL
 &&Ç->
right
 == NULL)

105 
	`‰ì
(
n
);

106 
n
 = 
NULL
;

108 if(
n
->
À·
 =
NULL
)

110 
NODE
* 
tmp
 = 
n
;

111 
n
 =Ç->
right
;

112 
	`‰ì
(
tmp
);

114 if(
n
->
right
 =
NULL
)

116 
NODE
* 
tmp
 = 
n
;

117 
n
 =Ç->
À·
;

118 
	`‰ì
(
tmp
);

122 
NODE
* 
tmp
 = 
	`FödMö
(
n
->
right
);

123 
n
->
vÆue
 = 
tmp
->value;

124 
n
->
right
 = 
	`dñëe_Node
“->right, 
tmp
->
vÆue
);

127  
n
;

128 
	}
}

131 
	$¥öt_Tªe
(
NODE
* 
n
)

134 if(
n
 =
NULL
)

138 
	`¥öt_Tªe
(
n
->
À·
);

139 
	`¥ötf
("%d ", 
n
->
vÆue
);

140 
	`¥öt_Tªe
(
n
->
right
);

142 
	}
}

146 
	$maö
()

148 
NODE
* 
n1
 = 
	`¸óã_Node
();

149 
NODE
* 
n2
 = 
	`¸óã_Node
();

150 
NODE
* 
n3
 = 
	`¸óã_Node
();

151 
NODE
* 
n4
 = 
	`¸óã_Node
();

152 
NODE
* 
n5
 = 
	`¸óã_Node
();

153 
NODE
* 
n6
 = 
	`¸óã_Node
();

155 
roŸ
 = 
n1
;

157 
	`öô_Node
(
n1
, 10);

158 
	`öô_Node
(
n2
, 5);

159 
	`öô_Node
(
n3
, 15);

160 
	`öô_Node
(
n4
, 2);

161 
	`öô_Node
(
n5
, 7);

162 
	`öô_Node
(
n6
, 21);

164 
	`add_Node
(
n2
);

165 
	`add_Node
(
n3
);

166 
	`add_Node
(
n4
);

167 
	`add_Node
(
n5
);

169 
	`¥öt_Tªe
(
roŸ
);

170 
	`¥ötf
("\n");

172 
	`add_Node
(
n6
);

174 
	`¥öt_Tªe
(
roŸ
);

175 
	`¥ötf
("\n");

177 
	`dñëe_Node
(
roŸ
, 10);

178 
	`¥öt_Tªe
(
roŸ
);

179 
	`¥ötf
("\n");

182 
	}
}

	@/home/g414/ABC/stuffs/Data_Structure/linked_lists.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	snode


8 
	mvÆue
;

9 
node
* 
	m√xt
;

10 }
	tNODE
;

12 
NODE
* 
	ghód
 = 
NULL
;

13 
NODE
* 
	gèû
 = 
NULL
;

17 
NODE
* 
¸óã_Node
();

18 
öô_Node
(
NODE
*, );

19 
öô_Li°
(
NODE
*);

21 
add_Node_‰⁄t
(
NODE
*);

22 
add_Node
(
NODE
*, );

23 
add_Node_íd
(
NODE
*);

25 
dñëe_Node_‰⁄t
();

26 
dñëe_Node
();

27 
dñëe_Node_íd
();

29 
ªvî£_Li°
();

31 
¥öt_Li°
();

35 
NODE
* 
	$¸óã_Node
()

37 
NODE
* 
tmp
 = (NODE*)
	`mÆloc
((NODE));

39  
tmp
;

40 
	}
}

42 
	$öô_Node
(
NODE
* 
n
, 
vÆue
)

44 
n
->
vÆue
 = value;

45 
n
->
√xt
 = 
NULL
;

46 
	}
}

48 
	$öô_Li°
(
NODE
* 
n
)

50 
hód
 = 
n
;

51 
èû
 = 
n
;

52 
	}
}

54 
	$add_Node_‰⁄t
(
NODE
* 
n
)

56 
NODE
* 
tmp
 = 
hód
;

58 
hód
 = 
n
;

59 
n
->
√xt
 = 
tmp
;

60 
	}
}

63 
	$add_Node_íd
(
NODE
* 
n
)

65 
èû
->
√xt
 = 
n
;

66 
èû
 = 
n
;

67 
	}
}

70 
	$add_Node
(
NODE
* 
n
, 
i
)

72 
˙t
 = 1;

73 
NODE
* 
åav
 = 
hód
;

74 
NODE
* 
tmp
 = 
NULL
;

76 if(
i
 == 0)

78 
	`add_Node_‰⁄t
(
n
);

82 
åav
->
√xt
 !
NULL
 && 
˙t
 !
i
)

84 
åav
 =Åøv->
√xt
;

85 ++
˙t
;

88 if(
˙t
 =
i
)

90 
tmp
 = 
åav
->
√xt
;

91 
åav
->
√xt
 = 
n
;

92 
n
->
√xt
 = 
tmp
;

96 
	`¥ötf
("TheÜist is shorterÅhanÅheÜocation\n");

97 
	`add_Node_íd
(
n
);

99 
	}
}

101 
	$dñëe_Node_‰⁄t
()

103 
NODE
* 
tmp
 = 
hód
;

104 
dñ_vÆue
;

106 
hód
 = 
tmp
->
√xt
;

107 
dñ_vÆue
 = 
tmp
->
vÆue
;

109 
	`‰ì
(
tmp
);

111  
dñ_vÆue
;

112 
	}
}

115 
	$dñëe_Node_íd
()

117 
ãmp_vÆ
;

118 
NODE
* 
åav
 = 
hód
;

119 
NODE
* 
dñ_node
;

121 if(
hód
 =
èû
)

123 
ãmp_vÆ
 = 
åav
->
vÆue
;

124 
hód
 = 
èû
 = 
NULL
;

128 
åav
->
√xt
->√xà!
NULL
)

129 
åav
 =Åøv->
√xt
;

131 
dñ_node
 = 
åav
->
√xt
;

132 
åav
->
√xt
 = 
NULL
;

133 
ãmp_vÆ
 = 
dñ_node
->
vÆue
;

135 
	`‰ì
(
dñ_node
);

136  
ãmp_vÆ
;

137 
	}
}

139 
	$dñëe_Node
(
i
)

141 
NODE
* 
åav
 = 
hód
;

142 
NODE
* 
dñ_node
;

143 
˙t
 = 1;

144 
dñ_vÆue
;

146 if(
i
 == 0)

147  
	`dñëe_Node_‰⁄t
();

149 
åav
->
√xt
 !
NULL
 && 
˙t
 !
i
)

151 
åav
 =Åøv->
√xt
;

152 
˙t
++;

155 if(
˙t
 =
i
)

157 
dñ_node
 = 
åav
->
√xt
;

158 
åav
->
√xt
 = 
dñ_node
->next;

159 
dñ_vÆue
 = 
dñ_node
->
vÆue
;

163 
	`¥ötf
("TheÜist is shorterÅhanÅheÜocation\n");

164 
dñ_vÆue
 = 
	`dñëe_Node_íd
();

167  
dñ_vÆue
;

168 
	}
}

170 
	$ªvî£_Li°
()

172 
NODE
* 
¥ev
 = 
hód
;

173 
NODE
* 
√xt
 = 
NULL
;

174 
NODE
* 
åav
 = 
hód
->
√xt
;

176 
¥ev
->
√xt
 = 
NULL
;

177 
√xt
 = 
åav
->next;

179 
√xt
 !
NULL
)

181 
åav
->
√xt
 = 
¥ev
;

183 
¥ev
 = 
åav
;

184 
åav
 = 
√xt
;

185 
√xt
 = 
åav
->next;

189 
åav
->
√xt
 = 
¥ev
;

190 
hód
 = 
åav
;

191 
	}
}

193 
	$¥öt_Li°
()

195 
NODE
* 
åav
 = 
hód
;

197 
åav
->
√xt
 !
NULL
)

199 
	`¥ötf
("%d ", 
åav
->
vÆue
);

200 
åav
 =Åøv->
√xt
;

202 
	`¥ötf
("%d\n", 
åav
->
vÆue
);

203 
	}
}

206 
	$maö
()

208 
NODE
* 
n1
 = 
	`¸óã_Node
();

209 
NODE
* 
n2
 = 
	`¸óã_Node
();

210 
NODE
* 
n3
 = 
	`¸óã_Node
();

211 
NODE
* 
n4
 = 
	`¸óã_Node
();

212 
NODE
* 
n5
 = 
	`¸óã_Node
();

214 
	`öô_Li°
(
n1
);

216 
	`öô_Node
(
n1
, 10);

217 
	`öô_Node
(
n2
, 20);

218 
	`öô_Node
(
n3
, 30);

219 
	`öô_Node
(
n4
, 40);

220 
	`öô_Node
(
n5
, 50);

222 
	`¥ötf
("n1ádded\n");

223 
	`¥öt_Li°
();

225 
	`add_Node_íd
(
n2
);

226 
	`add_Node_íd
(
n3
);

227 
	`¥ötf
("\nn2Ç3ádded\n");

228 
	`¥öt_Li°
();

230 
	`add_Node
(
n4
, 1);

231 
	`add_Node
(
n5
, 2);

232 
	`¥ötf
("\nn4,Ç5ádded\n");

233 
	`¥öt_Li°
();

235 
	`¥ötf
("\ndeleteÅheÉnd\n");

236 
	`dñëe_Node_íd
();

237 
	`¥öt_Li°
();

239 
	`¥ötf
("\ndelete 2ndÇode\n");

240 
	`dñëe_Node
(2);

241 
	`¥öt_Li°
();

244 
	`ªvî£_Li°
();

245 
	`¥öt_Li°
();

248 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/apue.h

1 #i‚de‡
_APUE_H


2 
	#_APUE_H


	)

4 
	#_POSIX_CSOURCE
 200809L

	)

6 #i‡
deföed
(
SOLARIS
)

7 
	#_XOPEN_SOURCE
 600

	)

9 
	#_XOPEN_SOURCE
 700

	)

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<ãrmio.h
>

16 #i‡
deföed
(
MACOS
Ë|| !deföed(
TIOCGWINSZ
)

17 
	~<sys/io˘l.h
>

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°ddef.h
>

23 
	~<uni°d.h
>

24 
	~<sig«l.h
>

26 
	#MAXLINE
 4096

	)

32 
	#FILE_MODE
 (
S_ISUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

38 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

40 
	tSigfunc
();

42 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

43 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

49 *
∑th_Æloc
(
size_t
 *);

50 
›í_max
();

56 *
∑th_Æloc
(
size_t
 *);

57 
›í_max
();

58 
£t_˛€xec
();

59 
˛r_Ê
(, );

60 
£t_Ê
(, );

61 
¥_exô
();

62 
¥_mask
(const *);

63 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

64 
d´m⁄ize
(const *);

65 
¶ìp_us
();

66 
ssize_t
 
ªadn
(, *, 
size_t
);

67 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

68 
fd_pùe
(*);

69 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(, c⁄° *, 
size_t
));

71 
	`£nd_fd
(, );

72 
	`£nd_îr
(, , const *);

73 
	`£rv_li°í
(const *);

74 
	`£rv_ac˚±
(, 
uid_t
 *);

75 
	`˛i_c⁄n
(const *);

76 
	`buf_¨gs
(*, (*
func
)(,**));

77 
	`ây_cbªak
();

78 
	`ây_øw
();

79 
	`ây_ª£t
();

80 
	`ây_©exô
();

81 
ãrmios
 *
	`ây_ãrmios
();

82 
	`±ym_›í
(*, );

83 
	`±ys_›í
(*);

85 #ifde‡
TIOCGWINSZ


86 
pid_t
 
	`±y_f‹k
(*, *, , c⁄° 
ãrmios
 *, c⁄° 
wösize
 *);

89 
	`lock_ªg
(, , , 
off_t
, , off_t);

91 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

92 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

93 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

94 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

95 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_UNLCK
, (off£t), (whí˚), (Àn))

	)

97 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

99 
	#is_ªad_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_RDLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

100 
	#is_wrôe_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_WRLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

102 
	`îr_msg
(const *, ...);

103 
	$îr_dump
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

104 
	$îr_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

105 
	`îr_c⁄t
(, const *, ...);

106 
	$îr_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

107 
	`îr_ªt
(const *, ...);

108 
	$îr_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

109 
	`log_msg
(const *, ...);

111 
	`log_›í
(const *, , );

112 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

113 
	`log_ªt
(const *, ...);

114 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

115 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

116 
	`TELL_WAIT
();

117 
	`log_›í
(const *, , );

118 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

119 
	`log_ªt
(const *, ...);

120 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

121 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

122 
	`TELL_WAIT
();

123 
	`TELL_PARENT
(
pid_t
);

124 
	`TELL_CHILD
(
pid_t
);

125 
	`WAIT_PARENT
();

126 
	`WAIT_CHILD
();

136 
	~<î∫o.h
>

137 
	~<°d¨g.h
>

138 
	~<°rög.h
>

140 
	`îr_doô
(, , c⁄° *, 
va_li°
);

147 
	$îr_ªt
(c⁄° *
fmt
, ...)

149 
va_li°
 
≠
;

150 
	`va_°¨t
(
≠
, 
fmt
);

151 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

152 
	`va_íd
(
≠
);

153 
	}
}

160 
	$îr_sys
(c⁄° *
fmt
, ...)

162 
va_li°
 
≠
;

163 
	`va_°¨t
(
≠
, 
fmt
);

164 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

165 
	`va_íd
(
≠
);

166 
	`exô
(1);

167 
	}
}

175 
	$îr_c⁄t
(
îr‹
, c⁄° *
fmt
, ...)

177 
va_li°
 
≠
;

178 
	`va_°¨t
(
≠
, 
fmt
);

179 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

180 
	`va_íd
(
≠
);

181 
	}
}

189 
	$îr_exô
(
îr‹
, c⁄° *
fmt
, ...)

191 
va_li°
 
≠
;

192 
	`va_°¨t
(
≠
, 
fmt
);

193 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

194 
	`va_íd
(
≠
);

195 
	`exô
(1);

196 
	}
}

203 
	$îr_dump
(c⁄° *
fmt
, ...)

205 
va_li°
 
≠
;

206 
	`va_°¨t
(
≠
, 
fmt
);

207 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

208 
	`va_íd
(
≠
);

209 
	`ab‹t
();

210 
	`exô
(1);

211 
	}
}

218 
	$îr_msg
(c⁄° *
fmt
, ...)

220 
va_li°
 
≠
;

221 
	`va_°¨t
(
≠
, 
fmt
);

222 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

223 
	`va_íd
(
≠
);

224 
	}
}

231 
	$îr_quô
(c⁄° *
fmt
, ...)

233 
va_li°
 
≠
;

234 
	`va_°¨t
(
≠
, 
fmt
);

235 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

236 
	`va_íd
(
≠
);

237 
	`exô
(1);

238 
	}
}

245 
	$îr_doô
(
î∫oÊag
, 
îr‹
, c⁄° *
fmt
, 
va_li°
 
≠
)

247 
buf
[
MAXLINE
];

249 
	`v¢¥ötf
(
buf
, 
MAXLINE
-1, 
fmt
, 
≠
);

251 i‡(
î∫oÊag
)

252 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-°æí(buf)-1, ": %s", 
	`°ªº‹
(
îr‹
));

254 
	`°rˇt
(
buf
, "\n");

256 
	`fÊush
(
°dout
);

257 
	`Âuts
(
buf
, 
°dîr
);

258 
	`fÊush
(
NULL
);

259 
	}
}

267 
	~<î∫o.h
>

268 
	~<limôs.h
>

270 #ifde‡
PATH_MAX


271 
	g∑thmax
 = 
PATH_MAX
;

273 
	g∑thmax
 = 0;

276 
	gposix_vî
 = 0;

277 
	gxsi_vî
 = 0;

279 
	#PATH_MAX_GUESS
 1024

	)

281 * 
	$∑th_Æloc
(
size_t
 *
sizï
)

283 *
±r
;

284 
size_t
 
size
;

286 if(
posix_vî
 == 0)

287 
posix_vî
 = 
	`sysc⁄f
(
_SC_VERSION
);

289 if(
xsi_vî
 == 0)

290 
xsi_vî
 = 
	`sysc⁄f
(
_SC_XOPEN_VERSION
);

292 if(
∑thmax
 == 0)

294 
î∫o
 = 0;

296 if((
∑thmax
 = 
	`∑thc⁄f
("/", 
_PC_PATH_MAX
)) < 0)

298 if(
î∫o
 == 0)

299 
∑thmax
 = 
PATH_MAX_GUESS
;

301 
	`îr_sys
("pathconfÉrror for _PC_PATH_MAX");

304 
∑thmax
++;

307 if((
posix_vî
 < 200112LË&& (
xsi_vî
 < 4))

308 
size
 = 
∑thmax
 + 1;

310 
size
 = 
∑thmax
;

312 if((
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

313 
	`îr_sys
("mallocÉrror forÖathname");

315 if(
sizï
 !
NULL
)

316 *
sizï
 = 
size
;

318 (
±r
);

319 
	}
}

327 
	~<sys/waô.h
>

329 
	$¥_exô
(
°©us
)

331 if(
	`WIFEXITED
(
°©us
))

332 
	`¥ötf
("n‹mÆÅîmö©i⁄,Éxô sètu†%d\n", 
	`WEXITSTATUS
(
°©us
));

333 if(
	`WIFSIGNALED
(
°©us
))

334 
	`¥ötf
("abn‹mÆÅîmö©i⁄, sig«»numbî %d\n", 
	`WTERMSIG
(
°©us
));

335 if(
	`WIFSTOPPED
(
°©us
))

336 
	`¥ötf
("chûd st›≥d, sig«»numbî = %d\n", 
	`WSTOPSIG
(
°©us
));

338 #ifde‡
WCOREDUMP


339 
	`WCOREDUMP
(
°©us
) ? " (core file gernerated)" : ")";

344 
	}
}

352 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

353 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

355 
	$sig_u§
(
signo
)

357 
sigÊag
 = 1;

358 
	}
}

360 
	$TELL_WAIT
()

362 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

363 
	`îr_sys
("signal(SIGUSR1)Érror");

364 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

365 
	`îr_sys
("signal(SIGUSR2)Érror");

367 
	`sigem±y£t
(&
zîomask
);

368 
	`sigem±y£t
(&
√wmask
);

369 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

371 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

374 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

375 
	`îr_sys
("SIG_BLOCKÉrror");

376 
	}
}

378 
	$TELL_PARENT
(
pid_t
 
pid
)

380 
	`kûl
(
pid
, 
SIGUSR2
);

381 
	}
}

383 
	$WAIT_PARENT
()

385 
sigÊag
 == 0)

386 
	`sigsu•íd
(&
zîomask
);

388 
sigÊag
 = 0;

391 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

392 
	`îr_sys
("SIG_SETMASKÉrror");

393 
	}
}

395 
	$TELL_CHILD
(
pid_t
 
pid
)

397 
	`kûl
(
pid
, 
SIGUSR1
);

398 
	}
}

400 
	$WAIT_CHILD
()

402 
sigÊag
 == 0)

403 
	`sigsu•íd
(&
zîomask
);

405 
sigÊag
 = 0;

408 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

409 
	`îr_sys
("SIG_SETMASKÉrror");

410 
	}
}

416 
	#SIGBAD
(
signo
Ë((signÿ<0 || (signoË> = 
NSIG
)

	)

418 
	$sigadd£t
(
sig£t_t
 * 
£t
, 
signo
)

421 if(
	`SIGBAD
(
signo
))

423 
î∫o
 = 
EINVAL
;

427 *
£t
 |1 << (
signo
 - 1);

430 
	}
}

432 
	$sigdñ£t
(
sig£t_t
 *
£t
, 
signo
)

434 if(
	`SIGBAD
(
signo
))

436 
îr⁄o
 = 
EINVAL
;

440 *
£t
 & = ~(1 << (
signo
 - 1));

443 
	}
}

445 
	$sigismemebî
(c⁄° 
sig£t_t
 *
£t
, 
signo
)

447 if(
	`SIGBAD
(
signo
))

449 
î∫o
 = 
EINVAL
;

453  ((*
£t
 & (1 << (
signo
 - 1))) != 0);

454 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/pr_mask.c

1 
	~<sig«l.h
>

2 
	~<°dio.h
>

3 
	~<î∫o.h
>

4 
	~<°rög.h
>

6 
	#TOTNUM_SIG
 31

	)

8 
	$¥_mask
(c⁄° *
°r
)

10 
sig£t_t
 
sig£t
;

11 
î∫o_ßve
;

12 
i
;

13 *
sig«me
;

15 
î∫o_ßve
 = 
î∫o
;

17 if(
	`sig¥ocmask
(0, 
NULL
, &
sig£t
) < 0)

19 
	`¥ötf
("sigprocmaskÉrro\n");

25 
	`¥ötf
("%s", 
°r
);

27 
i
 = 1; i <
TOTNUM_SIG
; ++i)

28 if(
	`sigismembî
(&
sig£t
, 
i
))

30 
sig«me
 = 
	`°rsig«l
(
i
);

32 
	`¥ötf
("\t\t%s\n", 
sig«me
);

38 
	}
}

41 
	$maö
()

43 
sig£t_t
 
mask£t
, 
ﬁd£t
;

44 
i
;

46 
	`¥ötf
("-----------------------------------------\n");

47 
	`¥ötf
("masking SIGINT\n");

49 
	`sigem±y£t
(&
mask£t
);

50 
	`sigadd£t
(&
mask£t
, 
SIGINT
);

51 
	`sig¥ocmask
(0, 
NULL
, &
ﬁd£t
);

53 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask£t
, 
NULL
);

55 
	`¥ötf
("done!\n-----------------------------------------\n\n");

56 
	`¥_mask
("masked signals:\n");

58 
	`¥ötf
("\n-----------------------------------------\nunmasking SIGINT\n");

60 
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁd£t
, 
NULL
);

62 
	`¥ötf
("done!\n");

64 
	`¥ötf
("-----------------------------------------\n");

65 
	`¥ötf
("masking EVERY signal\n");

67 
	`sigem±y£t
(&
mask£t
);

68 
i
 = 1; i <
TOTNUM_SIG
; ++i)

69 
	`sigadd£t
(&
mask£t
, 
i
);

70 
	`sig¥ocmask
(0,
NULL
, &
ﬁd£t
);

72 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask£t
, 
NULL
);

74 
	`¥ötf
("done!\n-----------------------------------------\n\n");

76 
	`¥_mask
("masked signals:\n");

77 
	`¥ötf
("\n-----------------------------------------\nunmasking EVERY signal\n");

79 
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁd£t
, 
NULL
);

81 
	`¥ötf
("done!\n");

82 
	`¥ötf
("-----------------------------------------\n");

86 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/reentrant.c

1 
	~"≠ue.h
"

2 
	~<pwd.h
>

4 
	$my_Æ¨m
(
signo
)

6 
∑sswd
 *
roŸ±r
;

8 
	`¥ötf
("in signal handler\n");

10 if((
roŸ±r
 = 
	`gëpw«m
("roŸ")Ë=
NULL
)

11 
	`îr_sys
("getpwnamÉrror");

13 
	`Æ¨m
(1);

14 
	}
}

16 
	$maö
()

18 
∑sswd
 *
±r
;

20 
	`sig«l
(
SIGALRM
, 
my_Æ¨m
);

22 
	`Æ¨m
(1);

26 if((
±r
 = 
	`gëpw«m
("™")Ë=
NULL
)

27 
	`îr_sys
("getpwnam in mainÉrror");

29 if(
	`°rcmp
(
±r
->
pw_«me
, "an") != 0)

30 
	`¥ötf
("Ñëu∫ vÆuêc‹ru±ed!,Öw_«mê%s\n", 
±r
->
pw_«me
);

32 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/signal_intr.c

1 
	~<sig«l.h
>

3 
	tSigfunc
();

5 
Sigfunc
 *
	$sig«l_öå
(, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

11 
	`sigem±y£t
(&
a˘
.
ß_mask
);

13 
a˘
.
ß_Êags
 = 0;

14 #ifde‡
SA_INTERRUPT


15 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

18 if(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

19  (
SIG_ERR
);

21 (
ﬂ˘
.
ß_h™dÀr
);

22 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/signal_v_sigaction.c

1 
	~<sig«l.h
>

3 
	tSigfunc
();

5 
Sigfunc
* 
	$sig«l_siga˘i⁄
(
signo
, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

11 
	`sigem±y£t
(&
a˘
.
ß_mask
);

12 
a˘
.
ß_Êags
 = 0;

14 if(
signo
 =
SIGALRM
)

16 #ifde‡
SA_INTERRUPT


17 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

22 
a˘
.
ß_Álgs
 |
SA_RESTART
;

25 if(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

26 (
SIG_ERR
);

28 (
ﬂ˘
.
ß_h™dÀr
);

29 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sigpending.c

1 
	~<°dio.h
>

2 
	~<sig«l.h
>

3 
	~<uni°d.h
>

5 
sig_öt
();

7 
	$sig_öt
(
signo
)

9 
	`¥ötf
("\ncaught SIGINT\n");

11 if(
	`sig«l
(
SIGINT
, 
SIG_DFL
Ë=
SIG_ERR
)

13 
	`¥ötf
("can'tÑeset SIGQUIT");

17 
	}
}

19 
	$maö
()

21 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
≥ndmask
;

23 if(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

25 
	`¥ötf
("signal()Érror\n");

30 
	`sigem±y£t
(&
√wmask
);

31 
	`sigadd£t
(&
√wmask
, 
SIGINT
);

33 
	`¥ötf
("blocking sig_int\n");

35 if(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

37 
	`¥ötf
("SIG_BLOCKÉrror");

42 
	`¶ìp
(5);

44 if(
	`sig≥ndög
(&
≥ndmask
) < 0)

46 
	`¥ötf
("sigpendingÉrror\n");

51 if(
	`sigismembî
(&
≥ndmask
, 
SIGINT
))

52 
	`¥ötf
("\nSIGINTÖending\n");

54 if(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

56 
	`¥ötf
("SIG_SETMASKÉrror");

61 
	`¥ötf
("SIGINT unblocked\n");

63 
	`¶ìp
(5);

66 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sigset_func.c

4 
	~<sig«l.h
>

5 
	~<î∫o.h
>

7 
	#SIGBAD
(
signo
Ë((signoË<0 || (signoË>
NSIG
)

	)

9 
	$sigadd£t
(
sig£t_t
 *
£t
, 
signo
)

11 if(
	`SIGBAD
(
signo
))

13 
î∫o
 = 
EINVAL
;

17 *
£t
 |1 << (
signo
 - 1);

20 
	}
}

22 
	$sigdñ£t
(
sig£t_t
 *
£t
, 
signo
)

24 if(
	`SIGBAD
(
signo
))

26 
î∫o
 = 
EINVAL
;

30 *
£t
 &~(1 << (
signo
 - 1));

33 
	}
}

35 
	$sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signo
)

37 if(
	`SIGBAD
(
signo
))

39 
î∫o
 = 
EINVAL
;

43  ((*
£t
 & ( 1 << (
signo
 - 1))) != 0);

44 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/simple_sig.c

1 
	~"≠ue.h
"

3 
our_sig_u§
();

5 
	$our_sig_u§
(
signo
)

7 if(
signo
 =
SIGUSR1
)

8 
	`¥ötf
("received SIGUSR1\n");

9 if(
signo
 =
SIGUSR2
)

10 
	`¥ötf
("received SIGUSR2\n");

12 
	`îr_dump
("ª˚ived sig«»%d\n", 
signo
);

13 
	}
}

15 
	$maö
()

17 if(
	`sig«l
(
SIGUSR1
, 
our_sig_u§
Ë=
SIG_ERR
)

18 
	`îr_sys
("can't catch SIGUSR1");

20 if(
	`sig«l
(
SIGUSR2
, 
our_sig_u§
Ë=
SIG_ERR
)

21 
	`îr_sys
("can't catch SIGUSR2");

24 
	`∑u£
();

25 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep1.c

1 
	~<sig«l.h
>

2 
	~<uni°d.h
>

3 
	~<°dio.h
>

5 
sig_Ærm
();

6 
¶ìp1
();

8 
	$sig_Ærm
()

11 
	}
}

13 
	$¶ìp1
(
£c⁄ds
)

15 if(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

16  (
£c⁄ds
);

18 
	`Æ¨m
(
£c⁄ds
);

20 
	`∑u£
();

22  (
	`Æ¨m
(0));

23 
	}
}

25 
	$maö
()

27 
£c
;

28 
i
;

30 
	`¥ötf
("enter howÜong you want sleep in sec: ");

31 
	`sˇnf
("%u", &
£c
);

33 
	`¥ötf
("\n¶ìp†f‹ %u sec⁄ds\n", 
£c
);

35 
	`¥ötf
("startsÇow\n");

38 
	`¶ìp1
(
£c
);

40 
	`¥ötf
("end sleep\n");

43 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep1_timed.c

1 
	~<sig«l.h
>

2 
	~<uni°d.h
>

3 
	~<°dio.h
>

4 
	~<sys/times.h
>

6 
sig_Ærm
();

7 
¶ìp1
();

9 
	$sig_Ærm
()

12 
	}
}

14 
	$¶ìp1
(
£c⁄ds
)

16 if(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

17  (
£c⁄ds
);

19 
	`Æ¨m
(
£c⁄ds
);

21 
	`∑u£
();

23  (
	`Æ¨m
(0));

24 
	}
}

26 
	$maö
()

28 
£c
;

29 
˛ktck
 = 0;

30 
˛ock_t
 
°¨t
, 
íd
;

31 
tms
 
tms°¨t
, 
tm£nd
;

33 if((
˛ktck
 = 
	`sysc⁄f
(
_SC_CLK_TCK
)) < 0)

36 
	`¥ötf
("enter howÜong you want sleep in sec: ");

37 
	`sˇnf
("%u", &
£c
);

39 
	`¥ötf
("\n¶ìp†f‹ %u sec⁄ds\n", 
£c
);

41 
°¨t
 = 
	`times
(&
tms°¨t
);

43 
	`¥ötf
("startsÇow\n");

46 
	`¶ìp1
(
£c
);

48 
íd
 = 
	`times
(&
tm£nd
);

49 
	`¥ötf
("end sleep\n");

51 
	`¥ötf
("\¡imê∑s£d = %f\n", ()(
íd
 - 
°¨t
)/
˛ktck
);

54 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep2.c

1 
	~<uni°d.h
>

2 
	~<£tjmp.h
>

3 
	~<sig«l.h
>

4 
	~<°dio.h
>

6 
jmp_buf
 
	gív_Ærm
;

8 
sig_Ærm
();

9 
¶ìp2
();

11 
	$sig_Ærm
(
signo
)

13 
	`l⁄gjmp
(
ív_Ærm
, 1);

14 
	}
}

16 
	$¶ìp2
(
£c⁄ds
)

18 if(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

19 (
£c⁄ds
);

20 if(
	`£tjmp
(
ív_Ærm
) == 0)

22 
	`Æ¨m
(
£c⁄ds
);

23 
	`∑u£
();

26 (
	`Æ¨m
(0));

27 
	}
}

29 
	$maö
()

31 
£c
;

33 
	`¥ötf
("enter howÜong you want sleep in sec: ");

34 
	`sˇnf
("%u", &
£c
);

36 
	`¥ötf
("\n¶ìp†f‹ %u sec⁄ds\n", 
£c
);

38 
	`¥ötf
("startsÇow\n");

40 if(
	`¶ìp2
(
£c
) != 0)

42 
	`¥ötf
("sleep2Érror\n");

46 
	`¥ötf
("end sleep\n");

49 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep2_catch.c

1 
	~<uni°d.h
>

2 
	~<£tjmp.h
>

3 
	~<sig«l.h
>

4 
	~<°dio.h
>

6 
¶ìp2
();

7 
sig_öt
();

8 
sig_Ærm
();

10 
jmp_buf
 
	gív_Ærm
;

12 
	$¶ìp2
(
£c⁄ds
)

14 if(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

15 (
£c⁄ds
);

16 if(
	`£tjmp
(
ív_Ærm
) == 0)

18 
	`Æ¨m
(
£c⁄ds
);

19 
	`∑u£
();

22 (
	`Æ¨m
(0));

23 
	}
}

25 
	$sig_Ærm
(
signo
)

27 
	`l⁄gjmp
(
ív_Ærm
, 1);

28 
	}
}

30 
	$sig_öt
(
signo
)

32 
i
,
j
;

33 vﬁ©ûê
k
;

35 
	`¥ötf
("\nsig_int starting\n");

37 
i
 = 0; i< 300000; i++)

38 
j
 = 0; j< 40000; j++)

39 
k
 +
i
*
j
;

41 
	`¥ötf
("sig_int finished\n");

42 
	}
}

44 
	$maö
()

46 
un¶ït
;

48 if(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

50 
	`¥ötf
("signal(SIGINT)Érror");

54 
un¶ït
 = 
	`¶ìp2
(5);

56 
	`¥ötf
("¶ìp2Ñëu∫ed: %u\n", 
un¶ït
);

59 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_10/upper_limit.c

1 
	~<sig«l.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<°dio.h
>

6 
	#MAXLINE
 4096

	)

8 
sig_Ærm
();

10 
	$sig_Ærm
(
signo
)

12 
	`¥ötf
("\ninside of sig_alrm\n");

14 
	}
}

16 
	$maö
()

18 
n
;

19 
löe
[
MAXLINE
];

21 if(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

23 
	`¥ötf
("signal(SIGALRM)Érror");

27 
	`Æ¨m
(10);

29 if((
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) < 0)

31 
	`¥ötf
("readÉrror");

34 
	`Æ¨m
(0);

36 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

38 
	`exô
(0);

39 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_8/apue.h

1 #i‚de‡
_APUE_H


2 
	#_APUE_H


	)

4 
	#_POSIX_CSOURCE
 200809L

	)

6 #i‡
deföed
(
SOLARIS
)

7 
	#_XOPEN_SOURCE
 600

	)

9 
	#_XOPEN_SOURCE
 700

	)

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<ãrmio.h
>

16 #i‡
deföed
(
MACOS
Ë|| !deföed(
TIOCGWINSZ
)

17 
	~<sys/io˘l.h
>

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°ddef.h
>

23 
	~<uni°d.h
>

24 
	~<sig«l.h
>

26 
	#MAXLINE
 4096

	)

32 
	#FILE_MODE
 (
S_ISUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

38 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

40 
	tSigfunc
();

42 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

43 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

49 *
∑th_Æloc
(
size_t
 *);

50 
›í_max
();

56 *
∑th_Æloc
(
size_t
 *);

57 
›í_max
();

58 
£t_˛€xec
();

59 
˛r_Ê
(, );

60 
£t_Ê
(, );

61 
¥_exô
();

62 
¥_mask
(const *);

63 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

64 
d´m⁄ize
(const *);

65 
¶ìp_us
();

66 
ssize_t
 
ªadn
(, *, 
size_t
);

67 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

68 
fd_pùe
(*);

69 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(, c⁄° *, 
size_t
));

71 
	`£nd_fd
(, );

72 
	`£nd_îr
(, , const *);

73 
	`£rv_li°í
(const *);

74 
	`£rv_ac˚±
(, 
uid_t
 *);

75 
	`˛i_c⁄n
(const *);

76 
	`buf_¨gs
(*, (*
func
)(,**));

77 
	`ây_cbªak
();

78 
	`ây_øw
();

79 
	`ây_ª£t
();

80 
	`ây_©exô
();

81 
ãrmios
 *
	`ây_ãrmios
();

82 
	`±ym_›í
(*, );

83 
	`±ys_›í
(*);

85 #ifde‡
TIOCGWINSZ


86 
pid_t
 
	`±y_f‹k
(*, *, , c⁄° 
ãrmios
 *, c⁄° 
wösize
 *);

89 
	`lock_ªg
(, , , 
off_t
, , off_t);

91 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

92 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

93 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

94 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

95 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_UNLCK
, (off£t), (whí˚), (Àn))

	)

97 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

99 
	#is_ªad_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_RDLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

100 
	#is_wrôe_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_WRLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

102 
	`îr_msg
(const *, ...);

103 
	$îr_dump
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

104 
	$îr_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

105 
	`îr_c⁄t
(, const *, ...);

106 
	$îr_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

107 
	`îr_ªt
(const *, ...);

108 
	$îr_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

109 
	`log_msg
(const *, ...);

111 
	`log_›í
(const *, , );

112 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

113 
	`log_ªt
(const *, ...);

114 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

115 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

116 
	`TELL_WAIT
();

117 
	`log_›í
(const *, , );

118 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

119 
	`log_ªt
(const *, ...);

120 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

121 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

122 
	`TELL_WAIT
();

123 
	`TELL_PARENT
(
pid_t
);

124 
	`TELL_CHILD
(
pid_t
);

125 
	`WAIT_PARENT
();

126 
	`WAIT_CHILD
();

136 
	~<î∫o.h
>

137 
	~<°d¨g.h
>

138 
	~<°rög.h
>

140 
	`îr_doô
(, , c⁄° *, 
va_li°
);

147 
	$îr_ªt
(c⁄° *
fmt
, ...)

149 
va_li°
 
≠
;

150 
	`va_°¨t
(
≠
, 
fmt
);

151 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

152 
	`va_íd
(
≠
);

153 
	}
}

160 
	$îr_sys
(c⁄° *
fmt
, ...)

162 
va_li°
 
≠
;

163 
	`va_°¨t
(
≠
, 
fmt
);

164 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

165 
	`va_íd
(
≠
);

166 
	`exô
(1);

167 
	}
}

175 
	$îr_c⁄t
(
îr‹
, c⁄° *
fmt
, ...)

177 
va_li°
 
≠
;

178 
	`va_°¨t
(
≠
, 
fmt
);

179 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

180 
	`va_íd
(
≠
);

181 
	}
}

189 
	$îr_exô
(
îr‹
, c⁄° *
fmt
, ...)

191 
va_li°
 
≠
;

192 
	`va_°¨t
(
≠
, 
fmt
);

193 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

194 
	`va_íd
(
≠
);

195 
	`exô
(1);

196 
	}
}

203 
	$îr_dump
(c⁄° *
fmt
, ...)

205 
va_li°
 
≠
;

206 
	`va_°¨t
(
≠
, 
fmt
);

207 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

208 
	`va_íd
(
≠
);

209 
	`ab‹t
();

210 
	`exô
(1);

211 
	}
}

218 
	$îr_msg
(c⁄° *
fmt
, ...)

220 
va_li°
 
≠
;

221 
	`va_°¨t
(
≠
, 
fmt
);

222 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

223 
	`va_íd
(
≠
);

224 
	}
}

231 
	$îr_quô
(c⁄° *
fmt
, ...)

233 
va_li°
 
≠
;

234 
	`va_°¨t
(
≠
, 
fmt
);

235 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

236 
	`va_íd
(
≠
);

237 
	`exô
(1);

238 
	}
}

245 
	$îr_doô
(
î∫oÊag
, 
îr‹
, c⁄° *
fmt
, 
va_li°
 
≠
)

247 
buf
[
MAXLINE
];

249 
	`v¢¥ötf
(
buf
, 
MAXLINE
-1, 
fmt
, 
≠
);

251 i‡(
î∫oÊag
)

252 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-°æí(buf)-1, ": %s", 
	`°ªº‹
(
îr‹
));

254 
	`°rˇt
(
buf
, "\n");

256 
	`fÊush
(
°dout
);

257 
	`Âuts
(
buf
, 
°dîr
);

258 
	`fÊush
(
NULL
);

259 
	}
}

267 
	~<î∫o.h
>

268 
	~<limôs.h
>

270 #ifde‡
PATH_MAX


271 
	g∑thmax
 = 
PATH_MAX
;

273 
	g∑thmax
 = 0;

276 
	gposix_vî
 = 0;

277 
	gxsi_vî
 = 0;

279 
	#PATH_MAX_GUESS
 1024

	)

281 * 
	$∑th_Æloc
(
size_t
 *
sizï
)

283 *
±r
;

284 
size_t
 
size
;

286 if(
posix_vî
 == 0)

287 
posix_vî
 = 
	`sysc⁄f
(
_SC_VERSION
);

289 if(
xsi_vî
 == 0)

290 
xsi_vî
 = 
	`sysc⁄f
(
_SC_XOPEN_VERSION
);

292 if(
∑thmax
 == 0)

294 
î∫o
 = 0;

296 if((
∑thmax
 = 
	`∑thc⁄f
("/", 
_PC_PATH_MAX
)) < 0)

298 if(
î∫o
 == 0)

299 
∑thmax
 = 
PATH_MAX_GUESS
;

301 
	`îr_sys
("pathconfÉrror for _PC_PATH_MAX");

304 
∑thmax
++;

307 if((
posix_vî
 < 200112LË&& (
xsi_vî
 < 4))

308 
size
 = 
∑thmax
 + 1;

310 
size
 = 
∑thmax
;

312 if((
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

313 
	`îr_sys
("mallocÉrror forÖathname");

315 if(
sizï
 !
NULL
)

316 *
sizï
 = 
size
;

318 (
±r
);

319 
	}
}

327 
	~<sys/waô.h
>

329 
	$¥_exô
(
°©us
)

331 if(
	`WIFEXITED
(
°©us
))

332 
	`¥ötf
("n‹mÆÅîmö©i⁄,Éxô sètu†%d\n", 
	`WEXITSTATUS
(
°©us
));

333 if(
	`WIFSIGNALED
(
°©us
))

334 
	`¥ötf
("abn‹mÆÅîmö©i⁄, sig«»numbî %d\n", 
	`WTERMSIG
(
°©us
));

335 if(
	`WIFSTOPPED
(
°©us
))

336 
	`¥ötf
("chûd st›≥d, sig«»numbî = %d\n", 
	`WSTOPSIG
(
°©us
));

338 #ifde‡
WCOREDUMP


339 
	`WCOREDUMP
(
°©us
) ? " (core file gernerated)" : ")";

344 
	}
}

352 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

353 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

355 
	$sig_u§
(
signo
)

357 
sigÊag
 = 1;

358 
	}
}

360 
	$TELL_WAIT
()

362 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

363 
	`îr_sys
("signal(SIGUSR1)Érror");

364 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

365 
	`îr_sys
("signal(SIGUSR2)Érror");

367 
	`sigem±y£t
(&
zîomask
);

368 
	`sigem±y£t
(&
√wmask
);

369 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

371 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

374 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

375 
	`îr_sys
("SIG_BLOCKÉrror");

376 
	}
}

378 
	$TELL_PARENT
(
pid_t
 
pid
)

380 
	`kûl
(
pid
, 
SIGUSR2
);

381 
	}
}

383 
	$WAIT_PARENT
()

385 
sigÊag
 == 0)

386 
	`sigsu•íd
(&
zîomask
);

388 
sigÊag
 = 0;

391 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

392 
	`îr_sys
("SIG_SETMASKÉrror");

393 
	}
}

395 
	$TELL_CHILD
(
pid_t
 
pid
)

397 
	`kûl
(
pid
, 
SIGUSR1
);

398 
	}
}

400 
	$WAIT_CHILD
()

402 
sigÊag
 == 0)

403 
	`sigsu•íd
(&
zîomask
);

405 
sigÊag
 = 0;

408 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

409 
	`îr_sys
("SIG_SETMASKÉrror");

410 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_8/nice_val.c

1 
	~"≠ue.h
"

2 
	~<îr‹.h
>

3 
	~<sys/time.h
>

5 #i‡
deföed
(
MACOS
)

6 
	~<sys/sy¶imôs.h
>

7 #ñi‡
deföed
(
SOLARIS
)

8 
	~<limôs.h
>

9 #ñi‡
deföed
(
BSD
)

10 
	~<sys/∑øm.h
>

13 
	gcou¡
;

14 
timevÆ
 
	gíd
;

16 
checktime
(*);

18 
	$checktime
(*
°r
)

20 
timevÆ
 
tv
;

22 
	`gëtimeofday
(&
tv
, 
NULL
);

24 if(
tv
.
tv_£c
 >
íd
.tv_£¯&&Åv.
tv_u£c
 >=Énd.tv_usec)

26 
	`¥ötf
("%†cou¡ = %Œd\n", 
°r
, 
cou¡
);

27 
	`exô
(0);

29 
	}
}

31 
	$maö
(
¨gc
, *
¨gv
[])

33 
pid_t
 
pid
;

34 *
s
;

35 
nzîo
, 
ªt
;

36 
adj
 = 0;

38 
	`£tbuf
(
°dout
, 
NULL
);

40 #i‡
	`deföed
(
NZERO
)

41 
nzîo
 = 
NZERO
;

42 
	`¥ötf
("NZERO is defined\n");

43 #ñi‡
	`deföed
(
_SC_NZERO
)

44 
nzîo
 = 
	`sysc⁄f
(
_SC_NZERO
);

45 
	`¥ötf
("_SC_NZERO is defined\n");

47 #îr‹ 
NZERO
 
undeföed


50 
	`¥ötf
("NZERO = %d\n", 
nzîo
);

52 if(
¨gc
 == 2)

53 
adj
 = 
	`°πﬁ
(
¨gv
[1], 
NULL
, 10);

55 
	`gëtimeofday
(&
íd
, 
NULL
);

57 
íd
.
tv_£c
 += 10;

59 if((
pid
 = 
	`f‹k
()) < 0)

60 
	`îr_sys
("forkÉrror");

61 if(
pid
 == 0)

63 
s
 = "child";

64 
	`¥ötf
("cuºíàni˚ vÆuêö chûd i†%d,ádju°ög by %d\n", 
	`ni˚
(0Ë+ 
nzîo
, 
adj
);

66 
î∫o
 = 0;

67 if((
ªt
 = 
	`ni˚
(
adj
)Ë=-1 && 
î∫o
 != 0)

68 
	`îr_sys
("child set schedulingÖriority");

69 
	`¥ötf
("now chûdÇi˚ vÆuêi†%d\n", 
ªt
+
nzîo
);

73 
s
 = "parent";

75 
	`¥ötf
("cuºíàni˚ vÆuêöÖ¨íài†%d\n", 
	`ni˚
(0Ë+ 
nzîo
);

79 if(++
cou¡
 == 0)

80 
	`îr_quô
("%†cou¡î wøp", 
s
);

81 
	`checktime
(
s
);

83 
	}
}

	@/home/g414/ABC/stuffs/UNIX/Chapter_8/process_time.c

1 
	~"≠ue.h
"

2 
	~<sys/times.h
>

4 
¥_times
(
˛ock_t
, 
tms
 *, tms*);

5 
do_cmd
(*);

7 
	$¥_times
(
˛ock_t
 
ªÆ
, 
tms
 *
tms°¨t
, tms*
tm£nd
)

9 
˛ktck
 = 0;

11 if(
˛ktck
 == 0)

12 if((
˛ktck
 = 
	`sysc⁄f
(
_SC_CLK_TCK
)) < 0)

13 
	`îr_sys
("sysconfÉrror");

15 
	`¥ötf
("\åól: %7.2f\n", 
ªÆ
 / ()
˛ktck
);

16 
	`¥ötf
("\tu£r: %7.2f\n", (
tm£nd
->
tms_utime
 - 
tms°¨t
->tms_utimeË/ ()
˛ktck
);

17 
	`¥ötf
("\tsys: %7.2f\n", (
tm£nd
->
tms_°ime
 - 
tms°¨t
->tms_°imeË/ ()
˛ktck
);

18 
	`¥ötf
("\tchûd_u£r: %7.2f\n", (
tm£nd
->
tms_cutime
 - 
tms°¨t
->tms_cutimeË/ ()
˛ktck
);

19 
	`¥ötf
("\tchûd_sys: %7.2f\n", (
tm£nd
->
tms_c°ime
 - 
tms°¨t
->tms_c°imeË/ ()
˛ktck
);

20 
	}
}

22 
	$do_cmd
(*
cmd
)

24 
tms
 
tms°¨t
, 
tm£nd
;

25 
˛ock_t
 
°¨t
, 
íd
;

26 
°©us
;

28 
	`¥ötf
("\ncomm™d: %s\n", 
cmd
);

30 if((
°¨t
 = 
	`times
(&
tms°¨t
)) == -1)

31 
	`îr_sys
("timesÉrror");

33 if((
°©us
 = 
	`sy°em
(
cmd
)) < 0)

34 
	`îr_sys
("system()Érror");

36 if((
íd
 = 
	`times
(&
tm£nd
)) == -1)

37 
	`îr_sys
("timesÉrror");

39 
	`¥_times
(
íd
 - 
°¨t
,&
tms°¨t
, &
tm£nd
);

40 
	`¥_exô
(
°©us
);

41 
	}
}

43 
	$maö
(
¨gc
, * 
¨gv
[])

45 
i
;

47 
	`£tbuf
(
°dout
, 
NULL
);

49 
i
 = 1; i< 
¨gc
; i++)

50 
	`do_cmd
(
¨gv
[
i
]);

52 
	`exô
(0);

53 
	}
}

	@/home/g414/ABC/stuffs/UNIX/apue.h

1 #i‚de‡
_APUE_H


2 
	#_APUE_H


	)

4 
	#_POSIX_CSOURCE
 200809L

	)

6 #i‡
deföed
(
SOLARIS
)

7 
	#_XOPEN_SOURCE
 600

	)

9 
	#_XOPEN_SOURCE
 700

	)

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<ãrmio.h
>

16 #i‡
deföed
(
MACOS
Ë|| !deföed(
TIOCGWINSZ
)

17 
	~<sys/io˘l.h
>

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°ddef.h
>

23 
	~<uni°d.h
>

24 
	~<sig«l.h
>

26 
	#MAXLINE
 4096

	)

32 
	#FILE_MODE
 (
S_ISUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

38 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

40 
	tSigfunc
();

42 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

43 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

49 *
∑th_Æloc
(
size_t
 *);

50 
›í_max
();

56 *
∑th_Æloc
(
size_t
 *);

57 
›í_max
();

58 
£t_˛€xec
();

59 
˛r_Ê
(, );

60 
£t_Ê
(, );

61 
¥_exô
();

62 
¥_mask
(const *);

63 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

64 
d´m⁄ize
(const *);

65 
¶ìp_us
();

66 
ssize_t
 
ªadn
(, *, 
size_t
);

67 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

68 
fd_pùe
(*);

69 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(, c⁄° *, 
size_t
));

71 
	`£nd_fd
(, );

72 
	`£nd_îr
(, , const *);

73 
	`£rv_li°í
(const *);

74 
	`£rv_ac˚±
(, 
uid_t
 *);

75 
	`˛i_c⁄n
(const *);

76 
	`buf_¨gs
(*, (*
func
)(,**));

77 
	`ây_cbªak
();

78 
	`ây_øw
();

79 
	`ây_ª£t
();

80 
	`ây_©exô
();

81 
ãrmios
 *
	`ây_ãrmios
();

82 
	`±ym_›í
(*, );

83 
	`±ys_›í
(*);

85 #ifde‡
TIOCGWINSZ


86 
pid_t
 
	`±y_f‹k
(*, *, , c⁄° 
ãrmios
 *, c⁄° 
wösize
 *);

89 
	`lock_ªg
(, , , 
off_t
, , off_t);

91 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

92 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_RDLCK
, (off£t), (whí˚), (Àn))

	)

93 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

94 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLKW
, 
F_WRLCK
, (off£t), (whí˚), (Àn))

	)

95 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë
	`lock_ªg
((fd), 
F_SETLK
, 
F_UNLCK
, (off£t), (whí˚), (Àn))

	)

97 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

99 
	#is_ªad_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_RDLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

100 
	#is_wrôe_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
Ë(
	`lock_ã°
((fd), 
F_WRLCK
, (off£t), (whí˚), (Àn)Ë=0)

	)

102 
	`îr_msg
(const *, ...);

103 
	$îr_dump
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

104 
	$îr_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

105 
	`îr_c⁄t
(, const *, ...);

106 
	$îr_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

107 
	`îr_ªt
(const *, ...);

108 
	$îr_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

109 
	`log_msg
(const *, ...);

111 
	`log_›í
(const *, , );

112 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

113 
	`log_ªt
(const *, ...);

114 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

115 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

116 
	`TELL_WAIT
();

117 
	`log_›í
(const *, , );

118 
	$log_quô
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

119 
	`log_ªt
(const *, ...);

120 
	$log_sys
(c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

121 
	$log_exô
(, c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

122 
	`TELL_WAIT
();

123 
	`TELL_PARENT
(
pid_t
);

124 
	`TELL_CHILD
(
pid_t
);

125 
	`WAIT_PARENT
();

126 
	`WAIT_CHILD
();

136 
	~<î∫o.h
>

137 
	~<°d¨g.h
>

138 
	~<°rög.h
>

140 
	`îr_doô
(, , c⁄° *, 
va_li°
);

147 
	$îr_ªt
(c⁄° *
fmt
, ...)

149 
va_li°
 
≠
;

150 
	`va_°¨t
(
≠
, 
fmt
);

151 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

152 
	`va_íd
(
≠
);

153 
	}
}

160 
	$îr_sys
(c⁄° *
fmt
, ...)

162 
va_li°
 
≠
;

163 
	`va_°¨t
(
≠
, 
fmt
);

164 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

165 
	`va_íd
(
≠
);

166 
	`exô
(1);

167 
	}
}

175 
	$îr_c⁄t
(
îr‹
, c⁄° *
fmt
, ...)

177 
va_li°
 
≠
;

178 
	`va_°¨t
(
≠
, 
fmt
);

179 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

180 
	`va_íd
(
≠
);

181 
	}
}

189 
	$îr_exô
(
îr‹
, c⁄° *
fmt
, ...)

191 
va_li°
 
≠
;

192 
	`va_°¨t
(
≠
, 
fmt
);

193 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

194 
	`va_íd
(
≠
);

195 
	`exô
(1);

196 
	}
}

203 
	$îr_dump
(c⁄° *
fmt
, ...)

205 
va_li°
 
≠
;

206 
	`va_°¨t
(
≠
, 
fmt
);

207 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

208 
	`va_íd
(
≠
);

209 
	`ab‹t
();

210 
	`exô
(1);

211 
	}
}

218 
	$îr_msg
(c⁄° *
fmt
, ...)

220 
va_li°
 
≠
;

221 
	`va_°¨t
(
≠
, 
fmt
);

222 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

223 
	`va_íd
(
≠
);

224 
	}
}

231 
	$îr_quô
(c⁄° *
fmt
, ...)

233 
va_li°
 
≠
;

234 
	`va_°¨t
(
≠
, 
fmt
);

235 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

236 
	`va_íd
(
≠
);

237 
	`exô
(1);

238 
	}
}

245 
	$îr_doô
(
î∫oÊag
, 
îr‹
, c⁄° *
fmt
, 
va_li°
 
≠
)

247 
buf
[
MAXLINE
];

249 
	`v¢¥ötf
(
buf
, 
MAXLINE
-1, 
fmt
, 
≠
);

251 i‡(
î∫oÊag
)

252 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-°æí(buf)-1, ": %s", 
	`°ªº‹
(
îr‹
));

254 
	`°rˇt
(
buf
, "\n");

256 
	`fÊush
(
°dout
);

257 
	`Âuts
(
buf
, 
°dîr
);

258 
	`fÊush
(
NULL
);

259 
	}
}

267 
	~<î∫o.h
>

268 
	~<limôs.h
>

270 #ifde‡
PATH_MAX


271 
	g∑thmax
 = 
PATH_MAX
;

273 
	g∑thmax
 = 0;

276 
	gposix_vî
 = 0;

277 
	gxsi_vî
 = 0;

279 
	#PATH_MAX_GUESS
 1024

	)

281 * 
	$∑th_Æloc
(
size_t
 *
sizï
)

283 *
±r
;

284 
size_t
 
size
;

286 if(
posix_vî
 == 0)

287 
posix_vî
 = 
	`sysc⁄f
(
_SC_VERSION
);

289 if(
xsi_vî
 == 0)

290 
xsi_vî
 = 
	`sysc⁄f
(
_SC_XOPEN_VERSION
);

292 if(
∑thmax
 == 0)

294 
î∫o
 = 0;

296 if((
∑thmax
 = 
	`∑thc⁄f
("/", 
_PC_PATH_MAX
)) < 0)

298 if(
î∫o
 == 0)

299 
∑thmax
 = 
PATH_MAX_GUESS
;

301 
	`îr_sys
("pathconfÉrror for _PC_PATH_MAX");

304 
∑thmax
++;

307 if((
posix_vî
 < 200112LË&& (
xsi_vî
 < 4))

308 
size
 = 
∑thmax
 + 1;

310 
size
 = 
∑thmax
;

312 if((
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

313 
	`îr_sys
("mallocÉrror forÖathname");

315 if(
sizï
 !
NULL
)

316 *
sizï
 = 
size
;

318 (
±r
);

319 
	}
}

327 
	~<sys/waô.h
>

329 
	$¥_exô
(
°©us
)

331 if(
	`WIFEXITED
(
°©us
))

332 
	`¥ötf
("n‹mÆÅîmö©i⁄,Éxô sètu†%d\n", 
	`WEXITSTATUS
(
°©us
));

333 if(
	`WIFSIGNALED
(
°©us
))

334 
	`¥ötf
("abn‹mÆÅîmö©i⁄, sig«»numbî %d\n", 
	`WTERMSIG
(
°©us
));

335 if(
	`WIFSTOPPED
(
°©us
))

336 
	`¥ötf
("chûd st›≥d, sig«»numbî = %d\n", 
	`WSTOPSIG
(
°©us
));

338 #ifde‡
WCOREDUMP


339 
	`WCOREDUMP
(
°©us
) ? " (core file gernerated)" : ")";

344 
	}
}

352 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

353 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

355 
	$sig_u§
(
signo
)

357 
sigÊag
 = 1;

358 
	}
}

360 
	$TELL_WAIT
()

362 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

363 
	`îr_sys
("signal(SIGUSR1)Érror");

364 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

365 
	`îr_sys
("signal(SIGUSR2)Érror");

367 
	`sigem±y£t
(&
zîomask
);

368 
	`sigem±y£t
(&
√wmask
);

369 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

371 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

374 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

375 
	`îr_sys
("SIG_BLOCKÉrror");

376 
	}
}

378 
	$TELL_PARENT
(
pid_t
 
pid
)

380 
	`kûl
(
pid
, 
SIGUSR2
);

381 
	}
}

383 
	$WAIT_PARENT
()

385 
sigÊag
 == 0)

386 
	`sigsu•íd
(&
zîomask
);

388 
sigÊag
 = 0;

391 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

392 
	`îr_sys
("SIG_SETMASKÉrror");

393 
	}
}

395 
	$TELL_CHILD
(
pid_t
 
pid
)

397 
	`kûl
(
pid
, 
SIGUSR1
);

398 
	}
}

400 
	$WAIT_CHILD
()

402 
sigÊag
 == 0)

403 
	`sigsu•íd
(&
zîomask
);

405 
sigÊag
 = 0;

408 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

409 
	`îr_sys
("SIG_SETMASKÉrror");

410 
	}
}

418 
	#SIGBAD
(
signo
Ë((signoË<0 || (signoË>
_NSIG
)

	)

420 
	$¥_mask
(c⁄° *
°r
)

422 
sig£t_t
 
sig£t
;

423 
î∫o_ßve
;

424 
signo
;

425 
i
;

427 *
sys_sigli°
[];

429 
î∫o_ßve
 = 
î∫o
;

431 if(
	`sig¥ocmask
(0, 
NULL
, &
sig£t
) < 0)

432 
	`îr_ªt
("sigprocmaskÉrror");

435 
	`¥ötf
("%s", 
°r
);

436 
i
 = 0; i< 
_NSIG
; ++i)

438 if(
	`sigismembî
(&
sig£t
, 
i
))

439 
	`¥ötf
(" %s\n", 
sys_sigli°
[
i
]);

443 
î∫o
 = 
î∫o_ßve
;

444 
	}
}

	@/home/g414/ABC/stuffs/UNIX/test.c

1 
	~"≠ue.h
"

3 
	$maö
()

5 
sig£t_t
 
£t
;

7 
	`sigem±y£t
(&
£t
);

8 
	`sigadd£t
(&
£t
, 
SIGINT
);

10 
	`¥_mask
("Hi");

12 
	`exô
(0);

13 
	}
}

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/error.h

19 #i‚de‡
_ERROR_H


20 
	#_ERROR_H
 1

	)

22 
	~<„©uªs.h
>

25 
__BEGIN_DECLS


31 
	$îr‹
 (
__°©us
, 
__î∫um
, c⁄° *
__f‹m©
, ...)

32 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

34 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, c⁄° *
__‚ame
,

35 
__löío
, c⁄° *
__f‹m©
, ...)

36 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

41 (*
îr‹_¥öt_¥og«me
) ();

44 
îr‹_mesßge_cou¡
;

48 
îr‹_⁄e_≥r_löe
;

50 #ifde‡
__LDBL_COMPAT


51 
	~<bôs/îr‹-ldbl.h
>

56 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


57 
	~<bôs/îr‹.h
>

61 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

878 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

879 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

886 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

887 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

889 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

893 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

894 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

895 #ñi‡
deföed
 
__˝lu•lus


903 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

904 #ñi‡
	`__GNUC_PREREQ
 (4,0)

905 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

907 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

911 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

912 || 
	$__glibc_˛™g_¥îeq
 (2,8)

913 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

915 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

919 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

920 || 
	$__glibc_˛™g_¥îeq
 (2,8)

921 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

923 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

928 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

929 || 
	$__glibc_˛™g_¥îeq
 (2,8)

930 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

932 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

936 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

937 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


943 
	#isöf
(
x
) \

944 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

945 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

946 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

947 || 
	$__glibc_˛™g_¥îeq
 (3,7)

948 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

950 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

954 
	#MATH_ERRNO
 1

	)

955 
	#MATH_ERREXCEPT
 2

	)

962 #ifde‡
__FAST_MATH__


963 
	#m©h_îrh™dlög
 0

	)

964 #ñi‡
deföed
 
__NO_MATH_ERRNO__


965 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

967 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

972 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

973 
	~<bôs/isˇn⁄iˇl.h
>

976 #i‚de‡
__˝lu•lus


977 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

986 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

987 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

988 
ölöe
 

989 
	`issig«lög
 (
__vÆ
)

991 #ifde‡
__NO_LONG_DOUBLE_MATH


992  
	`__issig«lög
 (
__vÆ
);

994  
	`__issig«lögl
 (
__vÆ
);

997 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1000 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1002 
	}
}

1006 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1009 #i‚de‡
__˝lu•lus


1010 #ifde‡
__SUPPORT_SNAN__


1011 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1013 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1017 #ifde‡
__SUPPORT_SNAN__


1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1028 
ölöe
 

1029 
iszîo
 (
__vÆ
)

1031 #ifde‡
__NO_LONG_DOUBLE_MATH


1032  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1034  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1037 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1040 
ölöe
 

1041 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1043  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1047 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1048 
iszîo
 (
__T
 
__vÆ
)

1050  
__vÆ
 == 0;

1057 #ifde‡
__USE_XOPEN


1059 
	#MAXFLOAT
 3.40282347e+38F

	)

1064 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1065 
	#M_E
 2.7182818284590452354

	)

1066 
	#M_LOG2E
 1.4426950408889634074

	)

1067 
	#M_LOG10E
 0.43429448190325182765

	)

1068 
	#M_LN2
 0.69314718055994530942

	)

1069 
	#M_LN10
 2.30258509299404568402

	)

1070 
	#M_PI
 3.14159265358979323846

	)

1071 
	#M_PI_2
 1.57079632679489661923

	)

1072 
	#M_PI_4
 0.78539816339744830962

	)

1073 
	#M_1_PI
 0.31830988618379067154

	)

1074 
	#M_2_PI
 0.63661977236758134308

	)

1075 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1076 
	#M_SQRT2
 1.41421356237309504880

	)

1077 
	#M_SQRT1_2
 0.70710678118654752440

	)

1083 #ifde‡
__USE_GNU


1084 
	#M_El
 2.718281828459045235360287471352662498L

	)

1085 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1086 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1087 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1088 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1089 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1090 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1091 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1092 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1093 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1094 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1095 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1096 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1099 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1100 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1101 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1102 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1103 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1104 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1105 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1106 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1107 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1108 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1109 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1110 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1111 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1112 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1115 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1116 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1117 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1118 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1119 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1120 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1121 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1122 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1123 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1124 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1125 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1126 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1127 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1128 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1131 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1132 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1133 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1134 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1135 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1136 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1137 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1138 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1139 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1140 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1141 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1142 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1143 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1144 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1147 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1148 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1149 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1150 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1151 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1152 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1153 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1154 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1155 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1156 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1157 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1158 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1159 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1160 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1163 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1164 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1165 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1166 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1167 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1168 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1169 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1170 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1171 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1172 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1173 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1174 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1175 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1176 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1179 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1180 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1181 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1182 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1183 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1184 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1185 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1186 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1187 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1188 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1189 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1190 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1191 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1192 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1195 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1202 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1203 
	#__NO_MATH_INLINES
 1

	)

1206 #ifde‡
__USE_ISOC99


1207 #i‡
__GNUC_PREREQ
 (3, 1)

1214 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1215 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1216 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1217 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1218 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1219 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1221 
	#isgª©î
(
x
, 
y
) \

1222 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1223 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1224 
	#isgª©îequÆ
(
x
, 
y
) \

1225 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1226 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1227 
	#i¶ess
(
x
, 
y
) \

1228 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1229 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1230 
	#i¶es£quÆ
(
x
, 
y
) \

1231 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1232 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1233 
	#i¶essgª©î
(
x
, 
y
) \

1234 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1235 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1237 
	#isun‹dîed
(
x
, 
y
) \

1238 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1239 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1244 #ifde‡
__USE_EXTERN_INLINES


1245 
	~<bôs/m©hölöe.h
>

1249 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1252 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1253 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1254 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1255 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1256 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1257 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1259 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1264 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1265 
	#i£qsig
(
x
, 
y
) \

1266 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1279 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1281 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1283 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1285  
__i£qsigf
 (
__x
, 
__y
);

1289 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1291 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1293  
__i£qsig
 (
__x
, 
__y
);

1297 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1299 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1301 #i‚de‡
__NO_LONG_DOUBLE_MATH


1302  
__i£qsigl
 (
__x
, 
__y
);

1304  
__i£qsig
 (
__x
, 
__y
);

1309 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1312 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1314 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1316  
__i£qsigf128
 (
__x
, 
__y
);

1321 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1322 
ölöe
 

1323 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1325 #i‡
__˝lu•lus
 >= 201103L

1326 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1328 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1330  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1338 
__END_DECLS


	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #ifde‡
__USE_MISC


63 
	~<bôs/ty≥s/FILE.h
>

67 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_MISC


94 
∑sswd
 *
	$fgëpwít
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

102 
	`puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
	`gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
	$gëpw«m
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

118 #ifde‡
__USE_POSIX


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #ifde‡
__USE_MISC


139 
	$gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

142 
	`__n⁄nuŒ
 ((1, 2, 4));

145 
	$gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

149 
	`__n⁄nuŒ
 ((2, 3, 5));

151 
	$gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

152 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

153 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

154 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

155 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

158 #ifdef 
__USE_MISC


166 
	$fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

167 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

168 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

169 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

170 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

175 #ifde‡
__USE_GNU


184 
	`gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

187 
__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/ty≥s/__sig£t_t.h
>

33 
	s__jmp_buf_èg


39 
__jmp_buf
 
	m__jmpbuf
;

40 
	m__mask_was_ßved
;

41 
__sig£t_t
 
	m__ßved_mask
;

45 
__jmp_buf_èg
 
	tjmp_buf
[1];

49 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

58 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

62 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

67 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

68 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

70 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


74 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

79 #ifdef 
__USE_POSIX


83 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

87 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

93 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

94 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

99 #i‡
__USE_FORTIFY_LEVEL
 > 0

100 
	~<bôs/£tjmp2.h
>

103 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

374 
	~<bôs/sig«l_ext.h
>

376 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	`©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1170 
	~<bôs/uni°d_ext.h
>

1172 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_MISC


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_MISC


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_MISC


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_MISC


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
74
3400
/home/g414/ABC/stuffs/Algorithms/Chapter_22/BFS.c
/home/g414/ABC/stuffs/Algorithms/Chapter_22/DFS.c
/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/Path_find.c
/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/graph.h
/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/linked_list.h
/home/g414/ABC/stuffs/Algorithms/Chapter_22/Path_find/queue.h
/home/g414/ABC/stuffs/Algorithms/Chapter_22/graph.h
/home/g414/ABC/stuffs/Algorithms/Chapter_22/linked_list.h
/home/g414/ABC/stuffs/Algorithms/Chapter_22/queue.h
/home/g414/ABC/stuffs/Algorithms/Chapter_4/Max_subArray.c
/home/g414/ABC/stuffs/Algorithms/Chapter_4/Playground/Max_subArray.c
/home/g414/ABC/stuffs/Algorithms/Chapter_5/Permutation.c
/home/g414/ABC/stuffs/Algorithms/Chapter_6/Heapsort.c
/home/g414/ABC/stuffs/Algorithms/Chapter_8/Count_sort.c
/home/g414/ABC/stuffs/Algorithms/Chapter_8/Radix_sort.c
/home/g414/ABC/stuffs/Algorithms/playground/BFS/BFS.c
/home/g414/ABC/stuffs/Algorithms/playground/BFS/graph.h
/home/g414/ABC/stuffs/Algorithms/playground/BFS/linked_list.h
/home/g414/ABC/stuffs/Algorithms/playground/BFS/node.h
/home/g414/ABC/stuffs/Algorithms/playground/BFS/queue.h
/home/g414/ABC/stuffs/Algorithms/playground/testing.c
/home/g414/ABC/stuffs/Assembly/Chapter_4/test.S
/home/g414/ABC/stuffs/Assembly/Chapter_5/test.S
/home/g414/ABC/stuffs/Assembly/Chapter_5/test2.S
/home/g414/ABC/stuffs/Assembly/Chapter_5/test_for.S
/home/g414/ABC/stuffs/Assembly/IEEEsingle.c
/home/g414/ABC/stuffs/Assembly/test.s
/home/g414/ABC/stuffs/C_Programming/playground/Command_programing/Input_command.c
/home/g414/ABC/stuffs/C_Programming/playground/Coordinate_Shift.c
/home/g414/ABC/stuffs/C_Programming/playground/Fibo.c
/home/g414/ABC/stuffs/C_Programming/playground/Input_command.c
/home/g414/ABC/stuffs/C_Programming/playground/Newton_method.c
/home/g414/ABC/stuffs/C_Programming/playground/Prime_number.c
/home/g414/ABC/stuffs/C_Programming/playground/String.c
/home/g414/ABC/stuffs/C_Programming/playground/test_j.c
/home/g414/ABC/stuffs/Data_Structure/array.c
/home/g414/ABC/stuffs/Data_Structure/bin_tree.c
/home/g414/ABC/stuffs/Data_Structure/linked_lists.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/apue.h
/home/g414/ABC/stuffs/UNIX/Chapter_10/pr_mask.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/reentrant.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/signal_intr.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/signal_v_sigaction.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sigpending.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sigset_func.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/simple_sig.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep1.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep1_timed.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep2.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/sleep2_catch.c
/home/g414/ABC/stuffs/UNIX/Chapter_10/upper_limit.c
/home/g414/ABC/stuffs/UNIX/Chapter_8/apue.h
/home/g414/ABC/stuffs/UNIX/Chapter_8/nice_val.c
/home/g414/ABC/stuffs/UNIX/Chapter_8/process_time.c
/home/g414/ABC/stuffs/UNIX/apue.h
/home/g414/ABC/stuffs/UNIX/test.c
/usr/include/errno.h
/usr/include/error.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/pwd.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/strings.h
/usr/include/termios.h
/usr/include/stdc-predef.h
